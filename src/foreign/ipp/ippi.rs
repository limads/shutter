/* automatically generated by rust-bindgen 0.57.0 */

pub const IPP_PI: f64 = 3.141592653589793;
pub const IPP_2PI: f64 = 6.283185307179586;
pub const IPP_PI2: f64 = 1.5707963267948966;
pub const IPP_PI4: f64 = 0.7853981633974483;
pub const IPP_PI180: f64 = 0.017453292519943295;
pub const IPP_RPI: f64 = 0.3183098861837907;
pub const IPP_SQRT2: f64 = 1.4142135623730951;
pub const IPP_SQRT3: f64 = 1.7320508075688772;
pub const IPP_LN2: f64 = 0.6931471805599453;
pub const IPP_LN3: f64 = 1.0986122886681098;
pub const IPP_E: f64 = 2.718281828459045;
pub const IPP_RE: f64 = 0.36787944117144233;
pub const IPP_MAX_8U: u32 = 255;
pub const IPP_MAX_16U: u32 = 65535;
pub const IPP_MAX_32U: u32 = 4294967295;
pub const IPP_MIN_8U: u32 = 0;
pub const IPP_MIN_16U: u32 = 0;
pub const IPP_MIN_32U: u32 = 0;
pub const IPP_MIN_8S: i32 = -128;
pub const IPP_MAX_8S: u32 = 127;
pub const IPP_MIN_16S: i32 = -32768;
pub const IPP_MAX_16S: u32 = 32767;
pub const IPP_MIN_32S: i32 = -2147483648;
pub const IPP_MAX_32S: u32 = 2147483647;
pub const IPP_MIN_64U: u32 = 0;
pub const IPP_MAX_64S: u64 = 9223372036854775807;
pub const IPP_MIN_64S: i64 = -9223372036854775808;
pub const IPP_MAX_64U: i32 = -1;
pub const ippCPUID_MMX: u32 = 1;
pub const ippCPUID_SSE: u32 = 2;
pub const ippCPUID_SSE2: u32 = 4;
pub const ippCPUID_SSE3: u32 = 8;
pub const ippCPUID_SSSE3: u32 = 16;
pub const ippCPUID_MOVBE: u32 = 32;
pub const ippCPUID_SSE41: u32 = 64;
pub const ippCPUID_SSE42: u32 = 128;
pub const ippCPUID_AVX: u32 = 256;
pub const ippAVX_ENABLEDBYOS: u32 = 512;
pub const ippCPUID_AES: u32 = 1024;
pub const ippCPUID_CLMUL: u32 = 2048;
pub const ippCPUID_ABR: u32 = 4096;
pub const ippCPUID_RDRAND: u32 = 8192;
pub const ippCPUID_F16C: u32 = 16384;
pub const ippCPUID_AVX2: u32 = 32768;
pub const ippCPUID_ADCOX: u32 = 65536;
pub const ippCPUID_RDSEED: u32 = 131072;
pub const ippCPUID_PREFETCHW: u32 = 262144;
pub const ippCPUID_SHA: u32 = 524288;
pub const ippCPUID_AVX512F: u32 = 1048576;
pub const ippCPUID_AVX512CD: u32 = 2097152;
pub const ippCPUID_AVX512ER: u32 = 4194304;
pub const ippCPUID_AVX512PF: u32 = 8388608;
pub const ippCPUID_AVX512BW: u32 = 16777216;
pub const ippCPUID_AVX512DQ: u32 = 33554432;
pub const ippCPUID_AVX512VL: u32 = 67108864;
pub const ippCPUID_AVX512VBMI: u32 = 134217728;
pub const ippCPUID_MPX: u32 = 268435456;
pub const ippCPUID_AVX512_4FMADDPS: u32 = 536870912;
pub const ippCPUID_AVX512_4VNNIW: u32 = 1073741824;
pub const ippCPUID_KNC: u32 = 2147483648;
pub const ABI_BAD_BX: u32 = 1;
pub const ABI_BAD_DI: u32 = 2;
pub const ABI_BAD_SI: u32 = 4;
pub const ABI_BAD_BP: u32 = 8;
pub const ABI_BAD_12: u32 = 16;
pub const ABI_BAD_13: u32 = 32;
pub const ABI_BAD_14: u32 = 64;
pub const ABI_BAD_15: u32 = 128;
pub const IPP_TEMPORAL_COPY: u32 = 0;
pub const IPP_NONTEMPORAL_STORE: u32 = 1;
pub const IPP_NONTEMPORAL_LOAD: u32 = 2;
pub const IPP_HOG_MAX_CELL: u32 = 16;
pub const IPP_HOG_MAX_BLOCK: u32 = 64;
pub const IPP_HOG_MAX_BINS: u32 = 16;
pub const IPP_SEGMENT_QUEUE: u32 = 1;
pub const IPP_SEGMENT_DISTANCE: u32 = 2;
pub const IPP_SEGMENT_BORDER_4: u32 = 64;
pub const IPP_SEGMENT_BORDER_8: u32 = 128;
pub const IppZFPMINBITS: u32 = 0;
pub const IppZFPMAXBITS: u32 = 4171;
pub const IppZFPMAXPREC: u32 = 64;
pub const IppZFPMINEXP: i32 = -10740;
pub const ippStsCpuNotSupportedErr: i32 = -9999;
pub const ippStsInplaceModeNotSupportedErr: i32 = -9998;
pub const ippStsIIRIIRLengthErr: i32 = -234;
pub const ippStsWarpTransformTypeErr: i32 = -233;
pub const ippStsExceededSizeErr: i32 = -232;
pub const ippStsWarpDirectionErr: i32 = -231;
pub const ippStsFilterTypeErr: i32 = -230;
pub const ippStsNormErr: i32 = -229;
pub const ippStsAlgTypeErr: i32 = -228;
pub const ippStsMisalignedOffsetErr: i32 = -227;
pub const ippStsBorderErr: i32 = -225;
pub const ippStsDitherTypeErr: i32 = -224;
pub const ippStsUnknownStatusCodeErr: i32 = -216;
pub const ippStsLzoBrokenStreamErr: i32 = -214;
pub const ippStsRoundModeNotSupportedErr: i32 = -213;
pub const ippStsDecimateFractionErr: i32 = -212;
pub const ippStsWeightErr: i32 = -211;
pub const ippStsQualityIndexErr: i32 = -210;
pub const ippStsIIRPassbandRippleErr: i32 = -209;
pub const ippStsFilterFrequencyErr: i32 = -208;
pub const ippStsIIRGenOrderErr: i32 = -206;
pub const ippStsConvergeErr: i32 = -205;
pub const ippStsSizeMatchMatrixErr: i32 = -204;
pub const ippStsCountMatrixErr: i32 = -203;
pub const ippStsRoiShiftMatrixErr: i32 = -202;
pub const ippStsSrcDataErr: i32 = -200;
pub const ippStsSingularErr: i32 = -195;
pub const ippStsSparseErr: i32 = -194;
pub const ippStsRegExpOptionsErr: i32 = -190;
pub const ippStsRegExpErr: i32 = -189;
pub const ippStsRegExpMatchLimitErr: i32 = -188;
pub const ippStsRegExpQuantifierErr: i32 = -187;
pub const ippStsRegExpGroupingErr: i32 = -186;
pub const ippStsRegExpBackRefErr: i32 = -185;
pub const ippStsRegExpChClassErr: i32 = -184;
pub const ippStsRegExpMetaChErr: i32 = -183;
pub const ippStsStrideMatrixErr: i32 = -182;
pub const ippStsNoiseRangeErr: i32 = -125;
pub const ippStsNotEvenStepErr: i32 = -108;
pub const ippStsHistoNofLevelsErr: i32 = -107;
pub const ippStsLUTNofLevelsErr: i32 = -106;
pub const ippStsChannelOrderErr: i32 = -60;
pub const ippStsDataTypeErr: i32 = -59;
pub const ippStsQuadErr: i32 = -58;
pub const ippStsRectErr: i32 = -57;
pub const ippStsCoeffErr: i32 = -56;
pub const ippStsNoiseValErr: i32 = -55;
pub const ippStsDitherLevelsErr: i32 = -54;
pub const ippStsNumChannelsErr: i32 = -53;
pub const ippStsCOIErr: i32 = -52;
pub const ippStsDivisorErr: i32 = -51;
pub const ippStsAlphaTypeErr: i32 = -50;
pub const ippStsGammaRangeErr: i32 = -49;
pub const ippStsChannelErr: i32 = -47;
pub const ippStsToneMagnErr: i32 = -46;
pub const ippStsToneFreqErr: i32 = -45;
pub const ippStsTonePhaseErr: i32 = -44;
pub const ippStsTrnglMagnErr: i32 = -43;
pub const ippStsTrnglFreqErr: i32 = -42;
pub const ippStsTrnglPhaseErr: i32 = -41;
pub const ippStsTrnglAsymErr: i32 = -40;
pub const ippStsHugeWinErr: i32 = -39;
pub const ippStsJaehneErr: i32 = -38;
pub const ippStsStrideErr: i32 = -37;
pub const ippStsEpsValErr: i32 = -36;
pub const ippStsWtOffsetErr: i32 = -35;
pub const ippStsAnchorErr: i32 = -34;
pub const ippStsMaskSizeErr: i32 = -33;
pub const ippStsShiftErr: i32 = -32;
pub const ippStsSampleFactorErr: i32 = -31;
pub const ippStsSamplePhaseErr: i32 = -30;
pub const ippStsFIRMRFactorErr: i32 = -29;
pub const ippStsFIRMRPhaseErr: i32 = -28;
pub const ippStsRelFreqErr: i32 = -27;
pub const ippStsFIRLenErr: i32 = -26;
pub const ippStsIIROrderErr: i32 = -25;
pub const ippStsResizeFactorErr: i32 = -24;
pub const ippStsInterpolationErr: i32 = -23;
pub const ippStsMirrorFlipErr: i32 = -22;
pub const ippStsMoment00ZeroErr: i32 = -21;
pub const ippStsThreshNegLevelErr: i32 = -20;
pub const ippStsThresholdErr: i32 = -19;
pub const ippStsFftFlagErr: i32 = -18;
pub const ippStsFftOrderErr: i32 = -17;
pub const ippStsStepErr: i32 = -16;
pub const ippStsLoadDynErr: i32 = -221;
pub const ippStsLengthErr: i32 = -15;
pub const ippStsNotSupportedModeErr: i32 = -14;
pub const ippStsContextMatchErr: i32 = -13;
pub const ippStsScaleRangeErr: i32 = -12;
pub const ippStsOutOfRangeErr: i32 = -11;
pub const ippStsDivByZeroErr: i32 = -10;
pub const ippStsMemAllocErr: i32 = -9;
pub const ippStsNullPtrErr: i32 = -8;
pub const ippStsRangeErr: i32 = -7;
pub const ippStsSizeErr: i32 = -6;
pub const ippStsBadArgErr: i32 = -5;
pub const ippStsNoMemErr: i32 = -4;
pub const ippStsErr: i32 = -2;
pub const ippStsNoErr: u32 = 0;
pub const ippStsNoOperation: u32 = 1;
pub const ippStsDivByZero: u32 = 2;
pub const ippStsWaterfall: u32 = 43;
pub const ippStsSqrtNegArg: u32 = 3;
pub const ippStsInvZero: u32 = 4;
pub const ippStsEvenMedianMaskSize: u32 = 5;
pub const ippStsLnZeroArg: u32 = 7;
pub const ippStsLnNegArg: u32 = 8;
pub const ippStsNanArg: u32 = 9;
pub const ippStsOverflow: u32 = 12;
pub const ippStsUnderflow: u32 = 17;
pub const ippStsSingularity: u32 = 18;
pub const ippStsDomain: u32 = 19;
pub const ippStsNonIntelCpu: u32 = 20;
pub const ippStsCpuMismatch: u32 = 21;
pub const ippStsOvermuchStrings: u32 = 26;
pub const ippStsOverlongString: u32 = 27;
pub const ippStsAffineQuadChanged: u32 = 28;
pub const ippStsWrongIntersectROI: u32 = 29;
pub const ippStsWrongIntersectQuad: u32 = 30;
pub const ippStsSrcSizeLessExpected: u32 = 32;
pub const ippStsDstSizeLessExpected: u32 = 33;
pub const ippStsDoubleSize: u32 = 35;
pub const ippStsNotSupportedCpu: u32 = 36;
pub const ippStsUnknownCacheSize: u32 = 37;
pub const ippStsSymKernelExpected: u32 = 38;
pub const ippStsEvenMedianWeight: u32 = 39;
pub const ippStsWrongIntersectVOI: u32 = 40;
pub const ippStsNoAntialiasing: u32 = 46;
pub const ippStsRepetitiveSrcData: u32 = 47;
pub const ippStsSizeWrn: u32 = 48;
pub const ippStsFeatureNotSupported: u32 = 49;
pub const ippStsUnknownFeature: u32 = 50;
pub const ippStsFeaturesCombination: u32 = 51;
pub const ippStsAccurateModeNotSupported: u32 = 52;
pub const ippStsNonOptimalPathSelected: u32 = 53;
pub const ippStsOk: u32 = 0;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppLibraryVersion {
    pub major: ::std::os::raw::c_int,
    pub minor: ::std::os::raw::c_int,
    pub majorBuild: ::std::os::raw::c_int,
    pub build: ::std::os::raw::c_int,
    pub targetCpu: [::std::os::raw::c_char; 4usize],
    pub Name: *const ::std::os::raw::c_char,
    pub Version: *const ::std::os::raw::c_char,
    pub BuildDate: *const ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_IppLibraryVersion() {
    assert_eq!(
        ::std::mem::size_of::<IppLibraryVersion>(),
        48usize,
        concat!("Size of: ", stringify!(IppLibraryVersion))
    );
    assert_eq!(
        ::std::mem::align_of::<IppLibraryVersion>(),
        8usize,
        concat!("Alignment of ", stringify!(IppLibraryVersion))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLibraryVersion>())).major as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(major)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLibraryVersion>())).minor as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(minor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLibraryVersion>())).majorBuild as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(majorBuild)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLibraryVersion>())).build as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(build)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLibraryVersion>())).targetCpu as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(targetCpu)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLibraryVersion>())).Name as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(Name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLibraryVersion>())).Version as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(Version)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLibraryVersion>())).BuildDate as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(BuildDate)
        )
    );
}
pub type Ipp8u = ::std::os::raw::c_uchar;
pub type Ipp16u = ::std::os::raw::c_ushort;
pub type Ipp32u = ::std::os::raw::c_uint;
pub type Ipp8s = ::std::os::raw::c_schar;
pub type Ipp16s = ::std::os::raw::c_short;
pub type Ipp32s = ::std::os::raw::c_int;
pub type Ipp32f = f32;
pub type Ipp64s = ::std::os::raw::c_longlong;
pub type Ipp64u = ::std::os::raw::c_ulonglong;
pub type Ipp64f = f64;
pub type Ipp16f = Ipp16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Ipp8sc {
    pub re: Ipp8s,
    pub im: Ipp8s,
}
#[test]
fn bindgen_test_layout_Ipp8sc() {
    assert_eq!(
        ::std::mem::size_of::<Ipp8sc>(),
        2usize,
        concat!("Size of: ", stringify!(Ipp8sc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp8sc>(),
        1usize,
        concat!("Alignment of ", stringify!(Ipp8sc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp8sc>())).re as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp8sc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp8sc>())).im as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp8sc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Ipp16sc {
    pub re: Ipp16s,
    pub im: Ipp16s,
}
#[test]
fn bindgen_test_layout_Ipp16sc() {
    assert_eq!(
        ::std::mem::size_of::<Ipp16sc>(),
        4usize,
        concat!("Size of: ", stringify!(Ipp16sc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp16sc>(),
        2usize,
        concat!("Alignment of ", stringify!(Ipp16sc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp16sc>())).re as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16sc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp16sc>())).im as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16sc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Ipp16uc {
    pub re: Ipp16u,
    pub im: Ipp16u,
}
#[test]
fn bindgen_test_layout_Ipp16uc() {
    assert_eq!(
        ::std::mem::size_of::<Ipp16uc>(),
        4usize,
        concat!("Size of: ", stringify!(Ipp16uc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp16uc>(),
        2usize,
        concat!("Alignment of ", stringify!(Ipp16uc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp16uc>())).re as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16uc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp16uc>())).im as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16uc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Ipp32sc {
    pub re: Ipp32s,
    pub im: Ipp32s,
}
#[test]
fn bindgen_test_layout_Ipp32sc() {
    assert_eq!(
        ::std::mem::size_of::<Ipp32sc>(),
        8usize,
        concat!("Size of: ", stringify!(Ipp32sc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp32sc>(),
        4usize,
        concat!("Alignment of ", stringify!(Ipp32sc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp32sc>())).re as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp32sc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp32sc>())).im as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp32sc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Ipp32fc {
    pub re: Ipp32f,
    pub im: Ipp32f,
}
#[test]
fn bindgen_test_layout_Ipp32fc() {
    assert_eq!(
        ::std::mem::size_of::<Ipp32fc>(),
        8usize,
        concat!("Size of: ", stringify!(Ipp32fc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp32fc>(),
        4usize,
        concat!("Alignment of ", stringify!(Ipp32fc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp32fc>())).re as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp32fc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp32fc>())).im as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp32fc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Ipp64sc {
    pub re: Ipp64s,
    pub im: Ipp64s,
}
#[test]
fn bindgen_test_layout_Ipp64sc() {
    assert_eq!(
        ::std::mem::size_of::<Ipp64sc>(),
        16usize,
        concat!("Size of: ", stringify!(Ipp64sc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp64sc>(),
        8usize,
        concat!("Alignment of ", stringify!(Ipp64sc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp64sc>())).re as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp64sc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp64sc>())).im as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp64sc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Ipp64fc {
    pub re: Ipp64f,
    pub im: Ipp64f,
}
#[test]
fn bindgen_test_layout_Ipp64fc() {
    assert_eq!(
        ::std::mem::size_of::<Ipp64fc>(),
        16usize,
        concat!("Size of: ", stringify!(Ipp64fc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp64fc>(),
        8usize,
        concat!("Alignment of ", stringify!(Ipp64fc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp64fc>())).re as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp64fc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Ipp64fc>())).im as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp64fc),
            "::",
            stringify!(im)
        )
    );
}
pub const IppDataType_ippUndef: IppDataType = -1;
pub const IppDataType_ipp1u: IppDataType = 0;
pub const IppDataType_ipp8u: IppDataType = 1;
pub const IppDataType_ipp8uc: IppDataType = 2;
pub const IppDataType_ipp8s: IppDataType = 3;
pub const IppDataType_ipp8sc: IppDataType = 4;
pub const IppDataType_ipp16u: IppDataType = 5;
pub const IppDataType_ipp16uc: IppDataType = 6;
pub const IppDataType_ipp16s: IppDataType = 7;
pub const IppDataType_ipp16sc: IppDataType = 8;
pub const IppDataType_ipp32u: IppDataType = 9;
pub const IppDataType_ipp32uc: IppDataType = 10;
pub const IppDataType_ipp32s: IppDataType = 11;
pub const IppDataType_ipp32sc: IppDataType = 12;
pub const IppDataType_ipp32f: IppDataType = 13;
pub const IppDataType_ipp32fc: IppDataType = 14;
pub const IppDataType_ipp64u: IppDataType = 15;
pub const IppDataType_ipp64uc: IppDataType = 16;
pub const IppDataType_ipp64s: IppDataType = 17;
pub const IppDataType_ipp64sc: IppDataType = 18;
pub const IppDataType_ipp64f: IppDataType = 19;
pub const IppDataType_ipp64fc: IppDataType = 20;
pub type IppDataType = ::std::os::raw::c_int;
pub const IppBool_ippFalse: IppBool = 0;
pub const IppBool_ippTrue: IppBool = 1;
pub type IppBool = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppCache {
    pub type_: ::std::os::raw::c_int,
    pub level: ::std::os::raw::c_int,
    pub size: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppCache() {
    assert_eq!(
        ::std::mem::size_of::<IppCache>(),
        12usize,
        concat!("Size of: ", stringify!(IppCache))
    );
    assert_eq!(
        ::std::mem::align_of::<IppCache>(),
        4usize,
        concat!("Alignment of ", stringify!(IppCache))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppCache>())).type_ as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppCache),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppCache>())).level as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppCache),
            "::",
            stringify!(level)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppCache>())).size as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppCache),
            "::",
            stringify!(size)
        )
    );
}
pub const IppRoundMode_ippRndZero: IppRoundMode = 0;
pub const IppRoundMode_ippRndNear: IppRoundMode = 1;
pub const IppRoundMode_ippRndFinancial: IppRoundMode = 2;
pub const IppRoundMode_ippRndHintAccurate: IppRoundMode = 16;
pub type IppRoundMode = ::std::os::raw::c_uint;
pub const IppHintAlgorithm_ippAlgHintNone: IppHintAlgorithm = 0;
pub const IppHintAlgorithm_ippAlgHintFast: IppHintAlgorithm = 1;
pub const IppHintAlgorithm_ippAlgHintAccurate: IppHintAlgorithm = 2;
pub type IppHintAlgorithm = ::std::os::raw::c_uint;
pub const IppCmpOp_ippCmpLess: IppCmpOp = 0;
pub const IppCmpOp_ippCmpLessEq: IppCmpOp = 1;
pub const IppCmpOp_ippCmpEq: IppCmpOp = 2;
pub const IppCmpOp_ippCmpGreaterEq: IppCmpOp = 3;
pub const IppCmpOp_ippCmpGreater: IppCmpOp = 4;
pub type IppCmpOp = ::std::os::raw::c_uint;
pub const IppAlgType_ippAlgAuto: IppAlgType = 0;
pub const IppAlgType_ippAlgDirect: IppAlgType = 1;
pub const IppAlgType_ippAlgFFT: IppAlgType = 2;
pub const IppAlgType_ippAlgMask: IppAlgType = 255;
pub type IppAlgType = ::std::os::raw::c_uint;
pub const IppsNormOp_ippsNormNone: IppsNormOp = 0;
pub const IppsNormOp_ippsNormA: IppsNormOp = 256;
pub const IppsNormOp_ippsNormB: IppsNormOp = 512;
pub const IppsNormOp_ippsNormMask: IppsNormOp = 65280;
pub type IppsNormOp = ::std::os::raw::c_uint;
pub const IppNormType_ippNormInf: IppNormType = 1;
pub const IppNormType_ippNormL1: IppNormType = 2;
pub const IppNormType_ippNormL2: IppNormType = 4;
pub type IppNormType = ::std::os::raw::c_uint;
pub const IPP_FFT_DIV_FWD_BY_N: ::std::os::raw::c_uint = 1;
pub const IPP_FFT_DIV_INV_BY_N: ::std::os::raw::c_uint = 2;
pub const IPP_FFT_DIV_BY_SQRTN: ::std::os::raw::c_uint = 4;
pub const IPP_FFT_NODIV_BY_ANY: ::std::os::raw::c_uint = 8;
pub type _bindgen_ty_1 = ::std::os::raw::c_uint;
pub const IPP_DIV_FWD_BY_N: ::std::os::raw::c_uint = 1;
pub const IPP_DIV_INV_BY_N: ::std::os::raw::c_uint = 2;
pub const IPP_DIV_BY_SQRTN: ::std::os::raw::c_uint = 4;
pub const IPP_NODIV_BY_ANY: ::std::os::raw::c_uint = 8;
pub type _bindgen_ty_2 = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppPointPolar {
    pub rho: Ipp32f,
    pub theta: Ipp32f,
}
#[test]
fn bindgen_test_layout_IppPointPolar() {
    assert_eq!(
        ::std::mem::size_of::<IppPointPolar>(),
        8usize,
        concat!("Size of: ", stringify!(IppPointPolar))
    );
    assert_eq!(
        ::std::mem::align_of::<IppPointPolar>(),
        4usize,
        concat!("Alignment of ", stringify!(IppPointPolar))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppPointPolar>())).rho as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppPointPolar),
            "::",
            stringify!(rho)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppPointPolar>())).theta as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppPointPolar),
            "::",
            stringify!(theta)
        )
    );
}
pub const IppWinType_ippWinBartlett: IppWinType = 0;
pub const IppWinType_ippWinBlackman: IppWinType = 1;
pub const IppWinType_ippWinHamming: IppWinType = 2;
pub const IppWinType_ippWinHann: IppWinType = 3;
pub const IppWinType_ippWinRect: IppWinType = 4;
pub type IppWinType = ::std::os::raw::c_uint;
pub const IppsIIRFilterType_ippButterworth: IppsIIRFilterType = 0;
pub const IppsIIRFilterType_ippChebyshev1: IppsIIRFilterType = 1;
pub type IppsIIRFilterType = ::std::os::raw::c_uint;
pub const IppsZCType_ippZCR: IppsZCType = 0;
pub const IppsZCType_ippZCXor: IppsZCType = 1;
pub const IppsZCType_ippZCC: IppsZCType = 2;
pub type IppsZCType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppsROI {
    pub left: ::std::os::raw::c_int,
    pub right: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppsROI() {
    assert_eq!(
        ::std::mem::size_of::<IppsROI>(),
        8usize,
        concat!("Size of: ", stringify!(IppsROI))
    );
    assert_eq!(
        ::std::mem::align_of::<IppsROI>(),
        4usize,
        concat!("Alignment of ", stringify!(IppsROI))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppsROI>())).left as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppsROI),
            "::",
            stringify!(left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppsROI>())).right as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppsROI),
            "::",
            stringify!(right)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandUniState_8u {
    _unused: [u8; 0],
}
pub type IppsRandUniState_8u = RandUniState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandUniState_16s {
    _unused: [u8; 0],
}
pub type IppsRandUniState_16s = RandUniState_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandUniState_32f {
    _unused: [u8; 0],
}
pub type IppsRandUniState_32f = RandUniState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandUniState_64f {
    _unused: [u8; 0],
}
pub type IppsRandUniState_64f = RandUniState_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandGaussState_8u {
    _unused: [u8; 0],
}
pub type IppsRandGaussState_8u = RandGaussState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandGaussState_16s {
    _unused: [u8; 0],
}
pub type IppsRandGaussState_16s = RandGaussState_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandGaussState_32f {
    _unused: [u8; 0],
}
pub type IppsRandGaussState_32f = RandGaussState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandGaussState_64f {
    _unused: [u8; 0],
}
pub type IppsRandGaussState_64f = RandGaussState_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_C_32fc {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_C_32fc = FFTSpec_C_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_C_32f {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_C_32f = FFTSpec_C_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_R_32f {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_R_32f = FFTSpec_R_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_C_64fc {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_C_64fc = FFTSpec_C_64fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_C_64f {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_C_64f = FFTSpec_C_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_R_64f {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_R_64f = FFTSpec_R_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_C_32fc {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_C_32fc = DFTSpec_C_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_C_32f {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_C_32f = DFTSpec_C_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_R_32f {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_R_32f = DFTSpec_R_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_C_64fc {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_C_64fc = DFTSpec_C_64fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_C_64f {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_C_64f = DFTSpec_C_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_R_64f {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_R_64f = DFTSpec_R_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCTFwdSpec_32f {
    _unused: [u8; 0],
}
pub type IppsDCTFwdSpec_32f = DCTFwdSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCTInvSpec_32f {
    _unused: [u8; 0],
}
pub type IppsDCTInvSpec_32f = DCTInvSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCTFwdSpec_64f {
    _unused: [u8; 0],
}
pub type IppsDCTFwdSpec_64f = DCTFwdSpec_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCTInvSpec_64f {
    _unused: [u8; 0],
}
pub type IppsDCTInvSpec_64f = DCTInvSpec_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTFwdState_32f {
    _unused: [u8; 0],
}
pub type IppsWTFwdState_32f = sWTFwdState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTFwdState_8u32f {
    _unused: [u8; 0],
}
pub type IppsWTFwdState_8u32f = sWTFwdState_8u32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTFwdState_16s32f {
    _unused: [u8; 0],
}
pub type IppsWTFwdState_16s32f = sWTFwdState_16s32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTFwdState_16u32f {
    _unused: [u8; 0],
}
pub type IppsWTFwdState_16u32f = sWTFwdState_16u32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTInvState_32f {
    _unused: [u8; 0],
}
pub type IppsWTInvState_32f = sWTInvState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTInvState_32f8u {
    _unused: [u8; 0],
}
pub type IppsWTInvState_32f8u = sWTInvState_32f8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTInvState_32f16s {
    _unused: [u8; 0],
}
pub type IppsWTInvState_32f16s = sWTInvState_32f16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTInvState_32f16u {
    _unused: [u8; 0],
}
pub type IppsWTInvState_32f16u = sWTInvState_32f16u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState_32f {
    _unused: [u8; 0],
}
pub type IppsIIRState_32f = IIRState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState_32fc {
    _unused: [u8; 0],
}
pub type IppsIIRState_32fc = IIRState_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState32f_16s {
    _unused: [u8; 0],
}
pub type IppsIIRState32f_16s = IIRState32f_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState32fc_16sc {
    _unused: [u8; 0],
}
pub type IppsIIRState32fc_16sc = IIRState32fc_16sc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState_64f {
    _unused: [u8; 0],
}
pub type IppsIIRState_64f = IIRState_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState_64fc {
    _unused: [u8; 0],
}
pub type IppsIIRState_64fc = IIRState_64fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64f_32f {
    _unused: [u8; 0],
}
pub type IppsIIRState64f_32f = IIRState64f_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64fc_32fc {
    _unused: [u8; 0],
}
pub type IppsIIRState64fc_32fc = IIRState64fc_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64f_32s {
    _unused: [u8; 0],
}
pub type IppsIIRState64f_32s = IIRState64f_32s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64fc_32sc {
    _unused: [u8; 0],
}
pub type IppsIIRState64fc_32sc = IIRState64fc_32sc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64f_16s {
    _unused: [u8; 0],
}
pub type IppsIIRState64f_16s = IIRState64f_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64fc_16sc {
    _unused: [u8; 0],
}
pub type IppsIIRState64fc_16sc = IIRState64fc_16sc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec_32f {
    _unused: [u8; 0],
}
pub type IppsFIRSpec_32f = FIRSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec_64f {
    _unused: [u8; 0],
}
pub type IppsFIRSpec_64f = FIRSpec_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec_32fc {
    _unused: [u8; 0],
}
pub type IppsFIRSpec_32fc = FIRSpec_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec_64fc {
    _unused: [u8; 0],
}
pub type IppsFIRSpec_64fc = FIRSpec_64fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec32f_32fc {
    _unused: [u8; 0],
}
pub type IppsFIRSpec32f_32fc = FIRSpec32f_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRLMSState_32f {
    _unused: [u8; 0],
}
pub type IppsFIRLMSState_32f = FIRLMSState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRLMSState32f_16s {
    _unused: [u8; 0],
}
pub type IppsFIRLMSState32f_16s = FIRLMSState32f_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HilbertSpec {
    _unused: [u8; 0],
}
pub type IppsHilbertSpec = HilbertSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSparseState_32f {
    _unused: [u8; 0],
}
pub type IppsFIRSparseState_32f = FIRSparseState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRSparseState_32f {
    _unused: [u8; 0],
}
pub type IppsIIRSparseState_32f = IIRSparseState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSparseState_32fc {
    _unused: [u8; 0],
}
pub type IppsFIRSparseState_32fc = FIRSparseState_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResamplingPolyphase_16s {
    _unused: [u8; 0],
}
pub type IppsResamplingPolyphase_16s = ResamplingPolyphase_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResamplingPolyphaseFixed_16s {
    _unused: [u8; 0],
}
pub type IppsResamplingPolyphaseFixed_16s = ResamplingPolyphaseFixed_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResamplingPolyphase_32f {
    _unused: [u8; 0],
}
pub type IppsResamplingPolyphase_32f = ResamplingPolyphase_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResamplingPolyphaseFixed_32f {
    _unused: [u8; 0],
}
pub type IppsResamplingPolyphaseFixed_32f = ResamplingPolyphaseFixed_32f;
pub type IppEnum = ::std::os::raw::c_int;
pub const IppiNormOp_ippiNormNone: IppiNormOp = 0;
pub const IppiNormOp_ippiNorm: IppiNormOp = 256;
pub const IppiNormOp_ippiNormCoefficient: IppiNormOp = 512;
pub const IppiNormOp_ippiNormMask: IppiNormOp = 65280;
pub type IppiNormOp = ::std::os::raw::c_uint;
pub const IppiROIShape_ippiROIFull: IppiROIShape = 0;
pub const IppiROIShape_ippiROIValid: IppiROIShape = 65536;
pub const IppiROIShape_ippiROISame: IppiROIShape = 131072;
pub const IppiROIShape_ippiROIMask: IppiROIShape = 16711680;
pub type IppiROIShape = ::std::os::raw::c_uint;
pub const IppChannels_ippC0: IppChannels = 0;
pub const IppChannels_ippC1: IppChannels = 1;
pub const IppChannels_ippC2: IppChannels = 2;
pub const IppChannels_ippC3: IppChannels = 3;
pub const IppChannels_ippC4: IppChannels = 4;
pub const IppChannels_ippP2: IppChannels = 5;
pub const IppChannels_ippP3: IppChannels = 6;
pub const IppChannels_ippP4: IppChannels = 7;
pub const IppChannels_ippAC1: IppChannels = 8;
pub const IppChannels_ippAC4: IppChannels = 9;
pub const IppChannels_ippA0C4: IppChannels = 10;
pub const IppChannels_ippAP4: IppChannels = 11;
pub type IppChannels = ::std::os::raw::c_uint;
pub const _IppiBorderType_ippBorderRepl: _IppiBorderType = 1;
pub const _IppiBorderType_ippBorderWrap: _IppiBorderType = 2;
pub const _IppiBorderType_ippBorderMirror: _IppiBorderType = 3;
pub const _IppiBorderType_ippBorderMirrorR: _IppiBorderType = 4;
pub const _IppiBorderType_ippBorderDefault: _IppiBorderType = 5;
pub const _IppiBorderType_ippBorderConst: _IppiBorderType = 6;
pub const _IppiBorderType_ippBorderTransp: _IppiBorderType = 7;
pub const _IppiBorderType_ippBorderInMemTop: _IppiBorderType = 16;
pub const _IppiBorderType_ippBorderInMemBottom: _IppiBorderType = 32;
pub const _IppiBorderType_ippBorderInMemLeft: _IppiBorderType = 64;
pub const _IppiBorderType_ippBorderInMemRight: _IppiBorderType = 128;
pub const _IppiBorderType_ippBorderInMem: _IppiBorderType = 240;
pub const _IppiBorderType_ippBorderFirstStageInMemTop: _IppiBorderType = 256;
pub const _IppiBorderType_ippBorderFirstStageInMemBottom: _IppiBorderType = 512;
pub const _IppiBorderType_ippBorderFirstStageInMemLeft: _IppiBorderType = 1024;
pub const _IppiBorderType_ippBorderFirstStageInMemRight: _IppiBorderType = 2048;
pub const _IppiBorderType_ippBorderFirstStageInMem: _IppiBorderType = 3840;
pub type _IppiBorderType = ::std::os::raw::c_uint;
pub use self::_IppiBorderType as IppiBorderType;
pub const IppiAxis_ippAxsHorizontal: IppiAxis = 0;
pub const IppiAxis_ippAxsVertical: IppiAxis = 1;
pub const IppiAxis_ippAxsBoth: IppiAxis = 2;
pub const IppiAxis_ippAxs45: IppiAxis = 3;
pub const IppiAxis_ippAxs135: IppiAxis = 4;
pub type IppiAxis = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiRect {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppiRect() {
    assert_eq!(
        ::std::mem::size_of::<IppiRect>(),
        16usize,
        concat!("Size of: ", stringify!(IppiRect))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiRect>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiRect))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiRect>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRect),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiRect>())).y as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRect),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiRect>())).width as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRect),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiRect>())).height as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRect),
            "::",
            stringify!(height)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiPoint {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppiPoint() {
    assert_eq!(
        ::std::mem::size_of::<IppiPoint>(),
        8usize,
        concat!("Size of: ", stringify!(IppiPoint))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiPoint>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiPoint))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiPoint>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPoint),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiPoint>())).y as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPoint),
            "::",
            stringify!(y)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiSize {
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppiSize() {
    assert_eq!(
        ::std::mem::size_of::<IppiSize>(),
        8usize,
        concat!("Size of: ", stringify!(IppiSize))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiSize>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiSize))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiSize>())).width as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiSize),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiSize>())).height as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiSize),
            "::",
            stringify!(height)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiPoint_32f {
    pub x: Ipp32f,
    pub y: Ipp32f,
}
#[test]
fn bindgen_test_layout_IppiPoint_32f() {
    assert_eq!(
        ::std::mem::size_of::<IppiPoint_32f>(),
        8usize,
        concat!("Size of: ", stringify!(IppiPoint_32f))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiPoint_32f>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiPoint_32f))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiPoint_32f>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPoint_32f),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiPoint_32f>())).y as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPoint_32f),
            "::",
            stringify!(y)
        )
    );
}
pub const _IppiMaskSize_ippMskSize1x3: _IppiMaskSize = 13;
pub const _IppiMaskSize_ippMskSize1x5: _IppiMaskSize = 15;
pub const _IppiMaskSize_ippMskSize3x1: _IppiMaskSize = 31;
pub const _IppiMaskSize_ippMskSize3x3: _IppiMaskSize = 33;
pub const _IppiMaskSize_ippMskSize5x1: _IppiMaskSize = 51;
pub const _IppiMaskSize_ippMskSize5x5: _IppiMaskSize = 55;
pub type _IppiMaskSize = ::std::os::raw::c_uint;
pub use self::_IppiMaskSize as IppiMaskSize;
pub const IPPI_INTER_NN: ::std::os::raw::c_int = 1;
pub const IPPI_INTER_LINEAR: ::std::os::raw::c_int = 2;
pub const IPPI_INTER_CUBIC: ::std::os::raw::c_int = 4;
pub const IPPI_INTER_CUBIC2P_BSPLINE: ::std::os::raw::c_int = 5;
pub const IPPI_INTER_CUBIC2P_CATMULLROM: ::std::os::raw::c_int = 6;
pub const IPPI_INTER_CUBIC2P_B05C03: ::std::os::raw::c_int = 7;
pub const IPPI_INTER_SUPER: ::std::os::raw::c_int = 8;
pub const IPPI_INTER_LANCZOS: ::std::os::raw::c_int = 16;
pub const IPPI_ANTIALIASING: ::std::os::raw::c_int = 536870912;
pub const IPPI_SUBPIXEL_EDGE: ::std::os::raw::c_int = 1073741824;
pub const IPPI_SMOOTH_EDGE: ::std::os::raw::c_int = -2147483648;
pub type _bindgen_ty_3 = ::std::os::raw::c_int;
pub const IppiInterpolationType_ippNearest: IppiInterpolationType = 1;
pub const IppiInterpolationType_ippLinear: IppiInterpolationType = 2;
pub const IppiInterpolationType_ippCubic: IppiInterpolationType = 6;
pub const IppiInterpolationType_ippLanczos: IppiInterpolationType = 16;
pub const IppiInterpolationType_ippHahn: IppiInterpolationType = 0;
pub const IppiInterpolationType_ippSuper: IppiInterpolationType = 8;
pub type IppiInterpolationType = ::std::os::raw::c_uint;
pub const IppiFraction_ippPolyphase_1_2: IppiFraction = 0;
pub const IppiFraction_ippPolyphase_3_5: IppiFraction = 1;
pub const IppiFraction_ippPolyphase_2_3: IppiFraction = 2;
pub const IppiFraction_ippPolyphase_7_10: IppiFraction = 3;
pub const IppiFraction_ippPolyphase_3_4: IppiFraction = 4;
pub type IppiFraction = ::std::os::raw::c_uint;
pub const IPP_FASTN_ORIENTATION: ::std::os::raw::c_uint = 1;
pub const IPP_FASTN_NMS: ::std::os::raw::c_uint = 2;
pub const IPP_FASTN_CIRCLE: ::std::os::raw::c_uint = 4;
pub const IPP_FASTN_SCORE_MODE0: ::std::os::raw::c_uint = 32;
pub type _bindgen_ty_4 = ::std::os::raw::c_uint;
pub const IppiAlphaType_ippAlphaOver: IppiAlphaType = 0;
pub const IppiAlphaType_ippAlphaIn: IppiAlphaType = 1;
pub const IppiAlphaType_ippAlphaOut: IppiAlphaType = 2;
pub const IppiAlphaType_ippAlphaATop: IppiAlphaType = 3;
pub const IppiAlphaType_ippAlphaXor: IppiAlphaType = 4;
pub const IppiAlphaType_ippAlphaPlus: IppiAlphaType = 5;
pub const IppiAlphaType_ippAlphaOverPremul: IppiAlphaType = 6;
pub const IppiAlphaType_ippAlphaInPremul: IppiAlphaType = 7;
pub const IppiAlphaType_ippAlphaOutPremul: IppiAlphaType = 8;
pub const IppiAlphaType_ippAlphaATopPremul: IppiAlphaType = 9;
pub const IppiAlphaType_ippAlphaXorPremul: IppiAlphaType = 10;
pub const IppiAlphaType_ippAlphaPlusPremul: IppiAlphaType = 11;
pub type IppiAlphaType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DeconvFFTState_32f_C1R {
    _unused: [u8; 0],
}
pub type IppiDeconvFFTState_32f_C1R = DeconvFFTState_32f_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DeconvFFTState_32f_C3R {
    _unused: [u8; 0],
}
pub type IppiDeconvFFTState_32f_C3R = DeconvFFTState_32f_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DeconvLR_32f_C1R {
    _unused: [u8; 0],
}
pub type IppiDeconvLR_32f_C1R = DeconvLR_32f_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DeconvLR_32f_C3R {
    _unused: [u8; 0],
}
pub type IppiDeconvLR_32f_C3R = DeconvLR_32f_C3R;
pub const IppiFilterBilateralType_ippiFilterBilateralGauss: IppiFilterBilateralType = 100;
pub const IppiFilterBilateralType_ippiFilterBilateralGaussFast: IppiFilterBilateralType = 101;
pub type IppiFilterBilateralType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBilateralSpec {
    _unused: [u8; 0],
}
pub type IppiFilterBilateralSpec = FilterBilateralSpec;
pub const IppiDistanceMethodType_ippDistNormL1: IppiDistanceMethodType = 2;
pub const IppiDistanceMethodType_ippDistNormL2: IppiDistanceMethodType = 4;
pub type IppiDistanceMethodType = ::std::os::raw::c_uint;
pub const IppiResizeFilterType_ippResizeFilterHann: IppiResizeFilterType = 0;
pub const IppiResizeFilterType_ippResizeFilterLanczos: IppiResizeFilterType = 1;
pub type IppiResizeFilterType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeFilterState {
    _unused: [u8; 0],
}
pub type IppiResizeFilterState = ResizeFilterState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiBorderSize {
    pub borderLeft: Ipp32u,
    pub borderTop: Ipp32u,
    pub borderRight: Ipp32u,
    pub borderBottom: Ipp32u,
}
#[test]
fn bindgen_test_layout_IppiBorderSize() {
    assert_eq!(
        ::std::mem::size_of::<IppiBorderSize>(),
        16usize,
        concat!("Size of: ", stringify!(IppiBorderSize))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiBorderSize>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiBorderSize))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiBorderSize>())).borderLeft as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiBorderSize),
            "::",
            stringify!(borderLeft)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiBorderSize>())).borderTop as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiBorderSize),
            "::",
            stringify!(borderTop)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiBorderSize>())).borderRight as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiBorderSize),
            "::",
            stringify!(borderRight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiBorderSize>())).borderBottom as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiBorderSize),
            "::",
            stringify!(borderBottom)
        )
    );
}
pub const IppiWarpDirection_ippWarpForward: IppiWarpDirection = 0;
pub const IppiWarpDirection_ippWarpBackward: IppiWarpDirection = 1;
pub type IppiWarpDirection = ::std::os::raw::c_uint;
pub const IppiWarpTransformType_ippWarpAffine: IppiWarpTransformType = 0;
pub const IppiWarpTransformType_ippWarpPerspective: IppiWarpTransformType = 1;
pub const IppiWarpTransformType_ippWarpBilinear: IppiWarpTransformType = 2;
pub type IppiWarpTransformType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeSpec_32f {
    _unused: [u8; 0],
}
pub type IppiResizeSpec_32f = ResizeSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeYUV422Spec {
    _unused: [u8; 0],
}
pub type IppiResizeYUV422Spec = ResizeYUV422Spec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeYUV420Spec {
    _unused: [u8; 0],
}
pub type IppiResizeYUV420Spec = ResizeYUV420Spec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeSpec_64f {
    _unused: [u8; 0],
}
pub type IppiResizeSpec_64f = ResizeSpec_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiWarpSpec {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBorderSpec {
    _unused: [u8; 0],
}
pub type IppiFilterBorderSpec = FilterBorderSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ThresholdAdaptiveSpec {
    _unused: [u8; 0],
}
pub type IppiThresholdAdaptiveSpec = ThresholdAdaptiveSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HistogramSpec {
    _unused: [u8; 0],
}
pub type IppiHistogramSpec = HistogramSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiHOGConfig {
    pub cvCompatible: ::std::os::raw::c_int,
    pub cellSize: ::std::os::raw::c_int,
    pub blockSize: ::std::os::raw::c_int,
    pub blockStride: ::std::os::raw::c_int,
    pub nbins: ::std::os::raw::c_int,
    pub sigma: Ipp32f,
    pub l2thresh: Ipp32f,
    pub winSize: IppiSize,
}
#[test]
fn bindgen_test_layout_IppiHOGConfig() {
    assert_eq!(
        ::std::mem::size_of::<IppiHOGConfig>(),
        36usize,
        concat!("Size of: ", stringify!(IppiHOGConfig))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiHOGConfig>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiHOGConfig))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiHOGConfig>())).cvCompatible as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(cvCompatible)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiHOGConfig>())).cellSize as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(cellSize)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiHOGConfig>())).blockSize as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(blockSize)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiHOGConfig>())).blockStride as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(blockStride)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiHOGConfig>())).nbins as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(nbins)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiHOGConfig>())).sigma as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(sigma)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiHOGConfig>())).l2thresh as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(l2thresh)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiHOGConfig>())).winSize as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(winSize)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFT2DSpec_C_32fc {
    _unused: [u8; 0],
}
pub type IppiFFTSpec_C_32fc = FFT2DSpec_C_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFT2DSpec_R_32f {
    _unused: [u8; 0],
}
pub type IppiFFTSpec_R_32f = FFT2DSpec_R_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFT2DSpec_C_32fc {
    _unused: [u8; 0],
}
pub type IppiDFTSpec_C_32fc = DFT2DSpec_C_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFT2DSpec_R_32f {
    _unused: [u8; 0],
}
pub type IppiDFTSpec_R_32f = DFT2DSpec_R_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCT2DFwdSpec_32f {
    _unused: [u8; 0],
}
pub type IppiDCTFwdSpec_32f = DCT2DFwdSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCT2DInvSpec_32f {
    _unused: [u8; 0],
}
pub type IppiDCTInvSpec_32f = DCT2DInvSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct iWTFwdSpec_32f_C1R {
    _unused: [u8; 0],
}
pub type IppiWTFwdSpec_32f_C1R = iWTFwdSpec_32f_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct iWTInvSpec_32f_C1R {
    _unused: [u8; 0],
}
pub type IppiWTInvSpec_32f_C1R = iWTInvSpec_32f_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct iWTFwdSpec_32f_C3R {
    _unused: [u8; 0],
}
pub type IppiWTFwdSpec_32f_C3R = iWTFwdSpec_32f_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct iWTInvSpec_32f_C3R {
    _unused: [u8; 0],
}
pub type IppiWTInvSpec_32f_C3R = iWTInvSpec_32f_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MomentState64f {
    _unused: [u8; 0],
}
pub type IppiMomentState_64f = MomentState64f;
pub type IppiHuMoment_64f = [Ipp64f; 7usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LUT_Spec {
    _unused: [u8; 0],
}
pub type IppiLUT_Spec = LUT_Spec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _ipHOG {
    _unused: [u8; 0],
}
pub type IppiHOGSpec = _ipHOG;
#[doc = " Below are 3D Image (Volume) Processing specific definitions"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprVolume {
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
    pub depth: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IpprVolume() {
    assert_eq!(
        ::std::mem::size_of::<IpprVolume>(),
        12usize,
        concat!("Size of: ", stringify!(IpprVolume))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprVolume>(),
        4usize,
        concat!("Alignment of ", stringify!(IpprVolume))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprVolume>())).width as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolume),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprVolume>())).height as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolume),
            "::",
            stringify!(height)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprVolume>())).depth as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolume),
            "::",
            stringify!(depth)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprCuboid {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
    pub depth: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IpprCuboid() {
    assert_eq!(
        ::std::mem::size_of::<IpprCuboid>(),
        24usize,
        concat!("Size of: ", stringify!(IpprCuboid))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprCuboid>(),
        4usize,
        concat!("Alignment of ", stringify!(IpprCuboid))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprCuboid>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprCuboid>())).y as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprCuboid>())).z as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(z)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprCuboid>())).width as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprCuboid>())).height as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(height)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprCuboid>())).depth as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(depth)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprPoint {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IpprPoint() {
    assert_eq!(
        ::std::mem::size_of::<IpprPoint>(),
        12usize,
        concat!("Size of: ", stringify!(IpprPoint))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprPoint>(),
        4usize,
        concat!("Alignment of ", stringify!(IpprPoint))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprPoint>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPoint),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprPoint>())).y as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPoint),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprPoint>())).z as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPoint),
            "::",
            stringify!(z)
        )
    );
}
pub const _IppiDifferentialKernel_ippFilterSobelVert: _IppiDifferentialKernel = 0;
pub const _IppiDifferentialKernel_ippFilterSobelHoriz: _IppiDifferentialKernel = 1;
pub const _IppiDifferentialKernel_ippFilterSobel: _IppiDifferentialKernel = 2;
pub const _IppiDifferentialKernel_ippFilterScharrVert: _IppiDifferentialKernel = 3;
pub const _IppiDifferentialKernel_ippFilterScharrHoriz: _IppiDifferentialKernel = 4;
pub const _IppiDifferentialKernel_ippFilterScharr: _IppiDifferentialKernel = 5;
pub const _IppiDifferentialKernel_ippFilterCentralDiffVert: _IppiDifferentialKernel = 6;
pub const _IppiDifferentialKernel_ippFilterCentralDiffHoriz: _IppiDifferentialKernel = 7;
pub const _IppiDifferentialKernel_ippFilterCentralDiff: _IppiDifferentialKernel = 8;
pub type _IppiDifferentialKernel = ::std::os::raw::c_uint;
pub use self::_IppiDifferentialKernel as IppiDifferentialKernel;
pub const _IppiKernelType_ippKernelSobel: _IppiKernelType = 0;
pub const _IppiKernelType_ippKernelScharr: _IppiKernelType = 1;
pub const _IppiKernelType_ippKernelSobelNeg: _IppiKernelType = 2;
pub type _IppiKernelType = ::std::os::raw::c_uint;
pub use self::_IppiKernelType as IppiKernelType;
pub const _IppiNorm_ippiNormInf: _IppiNorm = 0;
pub const _IppiNorm_ippiNormL1: _IppiNorm = 1;
pub const _IppiNorm_ippiNormL2: _IppiNorm = 2;
pub const _IppiNorm_ippiNormFM: _IppiNorm = 3;
pub type _IppiNorm = ::std::os::raw::c_uint;
pub use self::_IppiNorm as IppiNorm;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphState {
    _unused: [u8; 0],
}
pub type IppiMorphState = ipcvMorphState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphStateL {
    _unused: [u8; 0],
}
pub type IppiMorphStateL = ipcvMorphStateL;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphAdvState {
    _unused: [u8; 0],
}
pub type IppiMorphAdvState = ipcvMorphAdvState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphAdvStateL {
    _unused: [u8; 0],
}
pub type IppiMorphAdvStateL = ipcvMorphAdvStateL;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphGrayState_8u {
    _unused: [u8; 0],
}
pub type IppiMorphGrayState_8u = ipcvMorphGrayState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphGrayState_8uL {
    _unused: [u8; 0],
}
pub type IppiMorphGrayState_8uL = ipcvMorphGrayState_8uL;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphGrayState_32f {
    _unused: [u8; 0],
}
pub type IppiMorphGrayState_32f = ipcvMorphGrayState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphGrayState_32fL {
    _unused: [u8; 0],
}
pub type IppiMorphGrayState_32fL = ipcvMorphGrayState_32fL;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvConvState {
    _unused: [u8; 0],
}
pub type IppiConvState = ipcvConvState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IppiConnectedComp {
    pub area: Ipp64f,
    pub value: [Ipp64f; 3usize],
    pub rect: IppiRect,
}
#[test]
fn bindgen_test_layout__IppiConnectedComp() {
    assert_eq!(
        ::std::mem::size_of::<_IppiConnectedComp>(),
        48usize,
        concat!("Size of: ", stringify!(_IppiConnectedComp))
    );
    assert_eq!(
        ::std::mem::align_of::<_IppiConnectedComp>(),
        8usize,
        concat!("Alignment of ", stringify!(_IppiConnectedComp))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiConnectedComp>())).area as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiConnectedComp),
            "::",
            stringify!(area)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiConnectedComp>())).value as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiConnectedComp),
            "::",
            stringify!(value)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiConnectedComp>())).rect as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiConnectedComp),
            "::",
            stringify!(rect)
        )
    );
}
pub type IppiConnectedComp = _IppiConnectedComp;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PyramidState {
    _unused: [u8; 0],
}
pub type IppiPyramidState = PyramidState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterSeparableSpec {
    _unused: [u8; 0],
}
pub type IppiFilterSeparableSpec = FilterSeparableSpec;
pub type IppiPyramidDownState_8u_C1R = IppiPyramidState;
pub type IppiPyramidDownState_16u_C1R = IppiPyramidState;
pub type IppiPyramidDownState_32f_C1R = IppiPyramidState;
pub type IppiPyramidDownState_8u_C3R = IppiPyramidState;
pub type IppiPyramidDownState_16u_C3R = IppiPyramidState;
pub type IppiPyramidDownState_32f_C3R = IppiPyramidState;
pub type IppiPyramidUpState_8u_C1R = IppiPyramidState;
pub type IppiPyramidUpState_16u_C1R = IppiPyramidState;
pub type IppiPyramidUpState_32f_C1R = IppiPyramidState;
pub type IppiPyramidUpState_8u_C3R = IppiPyramidState;
pub type IppiPyramidUpState_16u_C3R = IppiPyramidState;
pub type IppiPyramidUpState_32f_C3R = IppiPyramidState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IppiPyramid {
    pub pImage: *mut *mut Ipp8u,
    pub pRoi: *mut IppiSize,
    pub pRate: *mut Ipp64f,
    pub pStep: *mut ::std::os::raw::c_int,
    pub pState: *mut Ipp8u,
    pub level: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout__IppiPyramid() {
    assert_eq!(
        ::std::mem::size_of::<_IppiPyramid>(),
        48usize,
        concat!("Size of: ", stringify!(_IppiPyramid))
    );
    assert_eq!(
        ::std::mem::align_of::<_IppiPyramid>(),
        8usize,
        concat!("Alignment of ", stringify!(_IppiPyramid))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiPyramid>())).pImage as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pImage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiPyramid>())).pRoi as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pRoi)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiPyramid>())).pRate as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pRate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiPyramid>())).pStep as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pStep)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiPyramid>())).pState as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pState)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiPyramid>())).level as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(level)
        )
    );
}
pub type IppiPyramid = _IppiPyramid;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptFlowPyrLK {
    _unused: [u8; 0],
}
pub type IppiOptFlowPyrLK = OptFlowPyrLK;
pub type IppiOptFlowPyrLK_8u_C1R = IppiOptFlowPyrLK;
pub type IppiOptFlowPyrLK_16u_C1R = IppiOptFlowPyrLK;
pub type IppiOptFlowPyrLK_32f_C1R = IppiOptFlowPyrLK;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvHaarClassifier_32f {
    _unused: [u8; 0],
}
pub type IppiHaarClassifier_32f = ipcvHaarClassifier_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvHaarClassifier_32s {
    _unused: [u8; 0],
}
pub type IppiHaarClassifier_32s = ipcvHaarClassifier_32s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvFGHistogramState_8u_C1R {
    _unused: [u8; 0],
}
pub type IppFGHistogramState_8u_C1R = ipcvFGHistogramState_8u_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvFGHistogramState_8u_C3R {
    _unused: [u8; 0],
}
pub type IppFGHistogramState_8u_C3R = ipcvFGHistogramState_8u_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvFGGaussianState_8u_C1R {
    _unused: [u8; 0],
}
pub type IppFGGaussianState_8u_C1R = ipcvFGGaussianState_8u_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvFGGaussianState_8u_C3R {
    _unused: [u8; 0],
}
pub type IppFGGaussianState_8u_C3R = ipcvFGGaussianState_8u_C3R;
pub const _IppiInpaintFlag_IPP_INPAINT_TELEA: _IppiInpaintFlag = 0;
pub const _IppiInpaintFlag_IPP_INPAINT_NS: _IppiInpaintFlag = 1;
pub type _IppiInpaintFlag = ::std::os::raw::c_uint;
pub use self::_IppiInpaintFlag as IppiInpaintFlag;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ippcvFilterGaussianSpec {
    _unused: [u8; 0],
}
pub type IppFilterGaussianSpec = ippcvFilterGaussianSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvInpaintState_8u {
    _unused: [u8; 0],
}
pub type IppiInpaintState_8u_C1R = ipcvInpaintState_8u;
pub type IppiInpaintState_8u_C3R = ipcvInpaintState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HoughProbSpec {
    _unused: [u8; 0],
}
pub type IppiHoughProbSpec = HoughProbSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FastNSpec {
    _unused: [u8; 0],
}
pub type IppiFastNSpec = FastNSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IppiCornerFastN {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub cornerType: ::std::os::raw::c_int,
    pub orientation: ::std::os::raw::c_int,
    pub angle: f32,
    pub score: f32,
}
#[test]
fn bindgen_test_layout__IppiCornerFastN() {
    assert_eq!(
        ::std::mem::size_of::<_IppiCornerFastN>(),
        24usize,
        concat!("Size of: ", stringify!(_IppiCornerFastN))
    );
    assert_eq!(
        ::std::mem::align_of::<_IppiCornerFastN>(),
        4usize,
        concat!("Alignment of ", stringify!(_IppiCornerFastN))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiCornerFastN>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiCornerFastN>())).y as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiCornerFastN>())).cornerType as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(cornerType)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiCornerFastN>())).orientation as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(orientation)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiCornerFastN>())).angle as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(angle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_IppiCornerFastN>())).score as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(score)
        )
    );
}
pub type IppiCornerFastN = _IppiCornerFastN;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FGMMState_8u_C3R {
    _unused: [u8; 0],
}
pub type IppFGMMState_8u_C3R = FGMMState_8u_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppFGMModel {
    pub numFrames: ::std::os::raw::c_uint,
    pub maxNGauss: ::std::os::raw::c_uint,
    pub varInit: Ipp32f,
    pub varMin: Ipp32f,
    pub varMax: Ipp32f,
    pub varWBRatio: Ipp32f,
    pub bckgThr: Ipp32f,
    pub varNGRatio: Ipp32f,
    pub reduction: Ipp32f,
    pub shadowValue: Ipp8u,
    pub shadowFlag: ::std::os::raw::c_char,
    pub shadowRatio: Ipp32f,
}
#[test]
fn bindgen_test_layout_IppFGMModel() {
    assert_eq!(
        ::std::mem::size_of::<IppFGMModel>(),
        44usize,
        concat!("Size of: ", stringify!(IppFGMModel))
    );
    assert_eq!(
        ::std::mem::align_of::<IppFGMModel>(),
        4usize,
        concat!("Alignment of ", stringify!(IppFGMModel))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).numFrames as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(numFrames)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).maxNGauss as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(maxNGauss)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).varInit as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varInit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).varMin as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varMin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).varMax as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varMax)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).varWBRatio as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varWBRatio)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).bckgThr as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(bckgThr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).varNGRatio as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varNGRatio)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).reduction as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(reduction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).shadowValue as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(shadowValue)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).shadowFlag as *const _ as usize },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(shadowFlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppFGMModel>())).shadowRatio as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(shadowRatio)
        )
    );
}
pub const IPP_UPPER: ::std::os::raw::c_uint = 1;
pub const IPP_LEFT: ::std::os::raw::c_uint = 2;
pub const IPP_CENTER: ::std::os::raw::c_uint = 4;
pub const IPP_RIGHT: ::std::os::raw::c_uint = 8;
pub const IPP_LOWER: ::std::os::raw::c_uint = 16;
pub const IPP_UPPER_LEFT: ::std::os::raw::c_uint = 32;
pub const IPP_UPPER_RIGHT: ::std::os::raw::c_uint = 64;
pub const IPP_LOWER_LEFT: ::std::os::raw::c_uint = 128;
pub const IPP_LOWER_RIGHT: ::std::os::raw::c_uint = 256;
pub type _bindgen_ty_5 = ::std::os::raw::c_uint;
pub const IppiDitherType_ippDitherNone: IppiDitherType = 0;
pub const IppiDitherType_ippDitherFS: IppiDitherType = 1;
pub const IppiDitherType_ippDitherJJN: IppiDitherType = 2;
pub const IppiDitherType_ippDitherStucki: IppiDitherType = 3;
pub const IppiDitherType_ippDitherBayer: IppiDitherType = 4;
pub type IppiDitherType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppRegExpFind {
    pub pFind: *mut ::std::os::raw::c_void,
    pub lenFind: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppRegExpFind() {
    assert_eq!(
        ::std::mem::size_of::<IppRegExpFind>(),
        16usize,
        concat!("Size of: ", stringify!(IppRegExpFind))
    );
    assert_eq!(
        ::std::mem::align_of::<IppRegExpFind>(),
        8usize,
        concat!("Alignment of ", stringify!(IppRegExpFind))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppRegExpFind>())).pFind as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppRegExpFind),
            "::",
            stringify!(pFind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppRegExpFind>())).lenFind as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppRegExpFind),
            "::",
            stringify!(lenFind)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RegExpState {
    _unused: [u8; 0],
}
pub type IppRegExpState = RegExpState;
pub const IppRegExpFormat_ippFmtASCII: IppRegExpFormat = 0;
pub const IppRegExpFormat_ippFmtUTF8: IppRegExpFormat = 1;
pub type IppRegExpFormat = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RegExpReplaceState {
    _unused: [u8; 0],
}
pub type IppRegExpReplaceState = RegExpReplaceState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MTFState_8u {
    _unused: [u8; 0],
}
pub type IppMTFState_8u = MTFState_8u;
pub const IppBWTSortAlgorithmHint_ippBWTItohTanakaLimSort: IppBWTSortAlgorithmHint = 0;
pub const IppBWTSortAlgorithmHint_ippBWTItohTanakaUnlimSort: IppBWTSortAlgorithmHint = 1;
pub const IppBWTSortAlgorithmHint_ippBWTSuffixSort: IppBWTSortAlgorithmHint = 2;
pub const IppBWTSortAlgorithmHint_ippBWTAutoSort: IppBWTSortAlgorithmHint = 3;
pub type IppBWTSortAlgorithmHint = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LZSSState_8u {
    _unused: [u8; 0],
}
pub type IppLZSSState_8u = LZSSState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LZ77State_8u {
    _unused: [u8; 0],
}
pub type IppLZ77State_8u = LZ77State_8u;
pub const IppLZ77ComprLevel_IppLZ77FastCompr: IppLZ77ComprLevel = 0;
pub const IppLZ77ComprLevel_IppLZ77AverageCompr: IppLZ77ComprLevel = 1;
pub const IppLZ77ComprLevel_IppLZ77BestCompr: IppLZ77ComprLevel = 2;
pub type IppLZ77ComprLevel = ::std::os::raw::c_uint;
pub const IppLZ77Chcksm_IppLZ77NoChcksm: IppLZ77Chcksm = 0;
pub const IppLZ77Chcksm_IppLZ77Adler32: IppLZ77Chcksm = 1;
pub const IppLZ77Chcksm_IppLZ77CRC32: IppLZ77Chcksm = 2;
pub type IppLZ77Chcksm = ::std::os::raw::c_uint;
pub const IppLZ77Flush_IppLZ77NoFlush: IppLZ77Flush = 0;
pub const IppLZ77Flush_IppLZ77SyncFlush: IppLZ77Flush = 1;
pub const IppLZ77Flush_IppLZ77FullFlush: IppLZ77Flush = 2;
pub const IppLZ77Flush_IppLZ77FinishFlush: IppLZ77Flush = 3;
pub type IppLZ77Flush = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppLZ77Pairs_16u {
    pub length: Ipp16u,
    pub offset: Ipp16u,
}
#[test]
fn bindgen_test_layout_IppLZ77Pairs_16u() {
    assert_eq!(
        ::std::mem::size_of::<IppLZ77Pairs_16u>(),
        4usize,
        concat!("Size of: ", stringify!(IppLZ77Pairs_16u))
    );
    assert_eq!(
        ::std::mem::align_of::<IppLZ77Pairs_16u>(),
        2usize,
        concat!("Alignment of ", stringify!(IppLZ77Pairs_16u))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLZ77Pairs_16u>())).length as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLZ77Pairs_16u),
            "::",
            stringify!(length)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppLZ77Pairs_16u>())).offset as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLZ77Pairs_16u),
            "::",
            stringify!(offset)
        )
    );
}
pub type IppLZ77Pair = IppLZ77Pairs_16u;
pub const IppLZ77DeflateStatus_IppLZ77StatusInit: IppLZ77DeflateStatus = 0;
pub const IppLZ77DeflateStatus_IppLZ77StatusLZ77Process: IppLZ77DeflateStatus = 1;
pub const IppLZ77DeflateStatus_IppLZ77StatusHuffProcess: IppLZ77DeflateStatus = 2;
pub const IppLZ77DeflateStatus_IppLZ77StatusFinal: IppLZ77DeflateStatus = 3;
pub type IppLZ77DeflateStatus = ::std::os::raw::c_uint;
pub const IppLZ77HuffMode_IppLZ77UseFixed: IppLZ77HuffMode = 0;
pub const IppLZ77HuffMode_IppLZ77UseDynamic: IppLZ77HuffMode = 1;
pub const IppLZ77HuffMode_IppLZ77UseStored: IppLZ77HuffMode = 2;
pub type IppLZ77HuffMode = ::std::os::raw::c_uint;
pub const IppLZ77InflateStatus_IppLZ77InflateStatusInit: IppLZ77InflateStatus = 0;
pub const IppLZ77InflateStatus_IppLZ77InflateStatusHuffProcess: IppLZ77InflateStatus = 1;
pub const IppLZ77InflateStatus_IppLZ77InflateStatusLZ77Process: IppLZ77InflateStatus = 2;
pub const IppLZ77InflateStatus_IppLZ77InflateStatusFinal: IppLZ77InflateStatus = 3;
pub type IppLZ77InflateStatus = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppInflateState {
    pub pWindow: *const Ipp8u,
    pub winSize: ::std::os::raw::c_uint,
    pub tableType: ::std::os::raw::c_uint,
    pub tableBufferSize: ::std::os::raw::c_uint,
}
#[test]
fn bindgen_test_layout_IppInflateState() {
    assert_eq!(
        ::std::mem::size_of::<IppInflateState>(),
        24usize,
        concat!("Size of: ", stringify!(IppInflateState))
    );
    assert_eq!(
        ::std::mem::align_of::<IppInflateState>(),
        8usize,
        concat!("Alignment of ", stringify!(IppInflateState))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppInflateState>())).pWindow as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppInflateState),
            "::",
            stringify!(pWindow)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppInflateState>())).winSize as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppInflateState),
            "::",
            stringify!(winSize)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppInflateState>())).tableType as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppInflateState),
            "::",
            stringify!(tableType)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppInflateState>())).tableBufferSize as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppInflateState),
            "::",
            stringify!(tableBufferSize)
        )
    );
}
pub const IppInflateMode_ippTYPE: IppInflateMode = 0;
pub const IppInflateMode_ippLEN: IppInflateMode = 1;
pub const IppInflateMode_ippLENEXT: IppInflateMode = 2;
pub type IppInflateMode = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppDeflateFreqTable {
    pub freq: Ipp16u,
    pub code: Ipp16u,
}
#[test]
fn bindgen_test_layout_IppDeflateFreqTable() {
    assert_eq!(
        ::std::mem::size_of::<IppDeflateFreqTable>(),
        4usize,
        concat!("Size of: ", stringify!(IppDeflateFreqTable))
    );
    assert_eq!(
        ::std::mem::align_of::<IppDeflateFreqTable>(),
        2usize,
        concat!("Alignment of ", stringify!(IppDeflateFreqTable))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppDeflateFreqTable>())).freq as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppDeflateFreqTable),
            "::",
            stringify!(freq)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppDeflateFreqTable>())).code as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(IppDeflateFreqTable),
            "::",
            stringify!(code)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppDeflateHuffCode {
    pub code: Ipp16u,
    pub len: Ipp16u,
}
#[test]
fn bindgen_test_layout_IppDeflateHuffCode() {
    assert_eq!(
        ::std::mem::size_of::<IppDeflateHuffCode>(),
        4usize,
        concat!("Size of: ", stringify!(IppDeflateHuffCode))
    );
    assert_eq!(
        ::std::mem::align_of::<IppDeflateHuffCode>(),
        2usize,
        concat!("Alignment of ", stringify!(IppDeflateHuffCode))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppDeflateHuffCode>())).code as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppDeflateHuffCode),
            "::",
            stringify!(code)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppDeflateHuffCode>())).len as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(IppDeflateHuffCode),
            "::",
            stringify!(len)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RLEState_BZ2 {
    _unused: [u8; 0],
}
pub type IppRLEState_BZ2 = RLEState_BZ2;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct EncodeHuffState_BZ2 {
    _unused: [u8; 0],
}
pub type IppEncodeHuffState_BZ2 = EncodeHuffState_BZ2;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DecodeHuffState_BZ2 {
    _unused: [u8; 0],
}
pub type IppDecodeHuffState_BZ2 = DecodeHuffState_BZ2;
pub const IppLZOMethod_IppLZO1XST: IppLZOMethod = 0;
pub const IppLZOMethod_IppLZO1XMT: IppLZOMethod = 1;
pub const IppLZOMethod_IppLZO1X1ST: IppLZOMethod = 2;
pub type IppLZOMethod = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LZOState_8u {
    _unused: [u8; 0],
}
pub type IppLZOState_8u = LZOState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ZfpState_32f {
    _unused: [u8; 0],
}
pub type IppEncodeZfpState_32f = ZfpState_32f;
pub type IppDecodeZfpState_32f = ZfpState_32f;
pub const IppPatternMatchMode_ippPatternMatchAuto: IppPatternMatchMode = 0;
pub const IppPatternMatchMode_ippPatternMatchDirect: IppPatternMatchMode = 1;
pub const IppPatternMatchMode_ippPatternMatchTable: IppPatternMatchMode = 2;
pub type IppPatternMatchMode = ::std::os::raw::c_uint;
pub const IppTopKMode_ippTopKAuto: IppTopKMode = 0;
pub const IppTopKMode_ippTopKDirect: IppTopKMode = 1;
pub const IppTopKMode_ippTopKRadix: IppTopKMode = 2;
pub type IppTopKMode = ::std::os::raw::c_uint;
pub type IppStatus = ::std::os::raw::c_int;
pub type IppSizeL = Ipp64s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiRectL {
    pub x: IppSizeL,
    pub y: IppSizeL,
    pub width: IppSizeL,
    pub height: IppSizeL,
}
#[test]
fn bindgen_test_layout_IppiRectL() {
    assert_eq!(
        ::std::mem::size_of::<IppiRectL>(),
        32usize,
        concat!("Size of: ", stringify!(IppiRectL))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiRectL>(),
        8usize,
        concat!("Alignment of ", stringify!(IppiRectL))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiRectL>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRectL),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiRectL>())).y as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRectL),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiRectL>())).width as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRectL),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiRectL>())).height as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRectL),
            "::",
            stringify!(height)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiPointL {
    pub x: IppSizeL,
    pub y: IppSizeL,
}
#[test]
fn bindgen_test_layout_IppiPointL() {
    assert_eq!(
        ::std::mem::size_of::<IppiPointL>(),
        16usize,
        concat!("Size of: ", stringify!(IppiPointL))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiPointL>(),
        8usize,
        concat!("Alignment of ", stringify!(IppiPointL))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiPointL>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPointL),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiPointL>())).y as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPointL),
            "::",
            stringify!(y)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiSizeL {
    pub width: IppSizeL,
    pub height: IppSizeL,
}
#[test]
fn bindgen_test_layout_IppiSizeL() {
    assert_eq!(
        ::std::mem::size_of::<IppiSizeL>(),
        16usize,
        concat!("Size of: ", stringify!(IppiSizeL))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiSizeL>(),
        8usize,
        concat!("Alignment of ", stringify!(IppiSizeL))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiSizeL>())).width as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiSizeL),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IppiSizeL>())).height as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiSizeL),
            "::",
            stringify!(height)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprVolumeL {
    pub width: IppSizeL,
    pub height: IppSizeL,
    pub depth: IppSizeL,
}
#[test]
fn bindgen_test_layout_IpprVolumeL() {
    assert_eq!(
        ::std::mem::size_of::<IpprVolumeL>(),
        24usize,
        concat!("Size of: ", stringify!(IpprVolumeL))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprVolumeL>(),
        8usize,
        concat!("Alignment of ", stringify!(IpprVolumeL))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprVolumeL>())).width as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolumeL),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprVolumeL>())).height as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolumeL),
            "::",
            stringify!(height)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprVolumeL>())).depth as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolumeL),
            "::",
            stringify!(depth)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprPointL {
    pub x: IppSizeL,
    pub y: IppSizeL,
    pub z: IppSizeL,
}
#[test]
fn bindgen_test_layout_IpprPointL() {
    assert_eq!(
        ::std::mem::size_of::<IpprPointL>(),
        24usize,
        concat!("Size of: ", stringify!(IpprPointL))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprPointL>(),
        8usize,
        concat!("Alignment of ", stringify!(IpprPointL))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprPointL>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPointL),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprPointL>())).y as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPointL),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IpprPointL>())).z as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPointL),
            "::",
            stringify!(z)
        )
    );
}
pub const _IpprBorderType_ipprBorderRepl: _IpprBorderType = 1;
pub const _IpprBorderType_ipprBorderConst: _IpprBorderType = 6;
pub const _IpprBorderType_ipprBorderInMemTop: _IpprBorderType = 16;
pub const _IpprBorderType_ipprBorderInMemBottom: _IpprBorderType = 32;
pub const _IpprBorderType_ipprBorderInMemLeft: _IpprBorderType = 64;
pub const _IpprBorderType_ipprBorderInMemRight: _IpprBorderType = 128;
pub const _IpprBorderType_ipprBorderInMemFront: _IpprBorderType = 4096;
pub const _IpprBorderType_ipprBorderInMemBack: _IpprBorderType = 8192;
pub const _IpprBorderType_ipprBorderInMem: _IpprBorderType = 12528;
pub type _IpprBorderType = ::std::os::raw::c_uint;
pub use self::_IpprBorderType as IpprBorderType;
pub const IppiMorphMode_IPP_MORPH_DEFAULT: IppiMorphMode = 0;
pub const IppiMorphMode_IPP_MORPH_MASK_NO_FLIP: IppiMorphMode = 1;
pub const IppiMorphMode_IPP_MORPH_NO_THRESHOLD: IppiMorphMode = 4;
pub type IppiMorphMode = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeSpec {
    _unused: [u8; 0],
}
pub type IppiResizeSpec = ResizeSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBilateralType_T {
    _unused: [u8; 0],
}
pub type IppiFilterBilateralSpec_T = FilterBilateralType_T;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBilateralType_LT {
    _unused: [u8; 0],
}
pub type IppiFilterBilateralSpec_LT = FilterBilateralType_LT;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeSpec_LT {
    _unused: [u8; 0],
}
pub type IppiResizeSpec_LT = ResizeSpec_LT;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterSobelType_T {
    _unused: [u8; 0],
}
pub type IppiFilterSobelSpec_T = FilterSobelType_T;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBorderSpecV {
    _unused: [u8; 0],
}
pub type IpprFilterBorderSpec = FilterBorderSpecV;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterMedianSpecV {
    _unused: [u8; 0],
}
pub type IpprFilterMedianSpec = FilterMedianSpecV;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprFilterBorderType_T {
    _unused: [u8; 0],
}
pub type IpprFilterBorderSpec_T = IpprFilterBorderType_T;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprFilterBorderType_LT {
    _unused: [u8; 0],
}
pub type IpprFilterBorderSpec_LT = IpprFilterBorderType_LT;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprFilterMedianType_T {
    _unused: [u8; 0],
}
pub type IpprFilterMedianSpec_T = IpprFilterMedianType_T;
extern "C" {
    pub fn ippiMalloc_8u_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiCopy_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_AC4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_AC4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_AC4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_AC4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_AC4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_AC4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_AC4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C3R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_AC4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C1IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C3IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_AC4IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C4IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C3IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_AC4IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C4IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C1IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C3IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_AC4IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C4IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C1IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C3IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_AC4IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C4IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C1IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C3IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_AC4IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C4IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32s_C1IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_AC4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_AC4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C3R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_AC4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_AC4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C1IR_L(
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C3IR_L(
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_AC4IR_L(
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C4IR_L(
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C1IR_L(
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C3IR_L(
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_AC4IR_L(
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C4IR_L(
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C1IR_L(
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C3IR_L(
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_AC4IR_L(
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C4IR_L(
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C1IR_L(
        pSrcDst: *mut Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C3IR_L(
        pSrcDst: *mut Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_AC4IR_L(
        pSrcDst: *mut Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C4IR_L(
        pSrcDst: *mut Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C1IR_L(
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C3IR_L(
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_AC4IR_L(
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C4IR_L(
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C3R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C1IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C3IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C4IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C1IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C3IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C4IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C1IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C3IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C4IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C1IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C3IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C4IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C3IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C4IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C1RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C3RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_AC4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C1RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C3RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_AC4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C1RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C3RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_AC4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C1RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C3RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_AC4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C1RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C3RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_AC4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C1RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C3RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_AC4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C1RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C3RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_AC4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C1RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C3RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_AC4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C1RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C3RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_AC4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C1RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C3RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_AC4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C1RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C3RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_AC4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C1RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C3RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_AC4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C1IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C3IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_AC4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C1IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C3IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_AC4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C1IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C3IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_AC4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C1R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C3R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_AC4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C1IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C3IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C4IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_AC4IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C1R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C3R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_AC4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C1IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C3IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C4IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_AC4IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C1IRSfs_L(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSizeL: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C3IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_AC4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C1IRSfs_L(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSizeL: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C3IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_AC4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C1IRSfs_L(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSizeL: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C3IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_AC4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C1R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C3R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_AC4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C3IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C4IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_AC4IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C1R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C3R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_AC4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C3IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C4IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_AC4IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C1RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C3RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_AC4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C1RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C3RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_AC4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C1RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C3RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_AC4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C1RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C3RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_AC4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C1RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C3RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_AC4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C1RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C3RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_AC4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C1IRSfs_L(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C3IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C4IRSfs_L(
        val: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_AC4IRSfs_L(
        val: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C1IRSfs_L(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C3IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C4IRSfs_L(
        val: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_AC4IRSfs_L(
        val: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C1IRSfs_L(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C3IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C4IRSfs_L(
        val: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_AC4IRSfs_L(
        val: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        val: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        val: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C1IR_L(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C3IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C4IR_L(
        val: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_AC4IR_L(
        val: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C1IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C3IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_AC4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C1IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C3IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_AC4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C1IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C3IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_AC4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: Ipp32f,
        Dst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C1IR_L(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C3IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_AC4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C1IR_L(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C3IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_AC4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C1IR_L(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C3IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_AC4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C1IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C3IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_AC4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C1IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C3IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_AC4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C1IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C3IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_AC4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C1IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C3IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_AC4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C1IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C3IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_AC4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C1IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C3IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_AC4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C1RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C3RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_AC4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C1RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C3RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_AC4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C1RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C3RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_AC4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C1RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C3RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_AC4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C1RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C3RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_AC4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C1RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C3RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_AC4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C1IRSfs_L(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C3IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_AC4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C1IRSfs_L(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C3IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_AC4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C1IRSfs_L(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C3IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_AC4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C1IRSfs_L(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C3IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_AC4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C1IRSfs_L(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C3IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_AC4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C1IRSfs_L(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C3IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_AC4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorderGetBufferSize_L(
        filter: IppiFilterBilateralType,
        dstRoiSize: IppiSizeL,
        radius: ::std::os::raw::c_int,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        distMethodType: IppiDistanceMethodType,
        pSpecSize: *mut IppSizeL,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorderInit_L(
        filter: IppiFilterBilateralType,
        dstRoiSize: IppiSizeL,
        radius: ::std::os::raw::c_int,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        distMethod: IppiDistanceMethodType,
        valSquareSigma: Ipp32f,
        posSquareSigma: Ipp32f,
        pSpec: *mut IppiFilterBilateralSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        interpolation: IppiInterpolationType,
        antialiasing: Ipp32u,
        pSpecSize: *mut IppSizeL,
        pInitBufSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_L(
        pSpec: *const IppiResizeSpec,
        dstSize: IppiSizeL,
        numChannels: Ipp32u,
        pBufSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_L(
        pSpec: *const IppiResizeSpec,
        pBorderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_L(
        pSpec: *const IppiResizeSpec,
        dstOffset: IppiPointL,
        srcOffset: *mut IppiPointL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_L(
        pSpec: *const IppiResizeSpec,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        srcRoiOffset: *mut IppiPointL,
        srcRoiSize: *mut IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        pSpec: *mut IppiResizeSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        pSpec: *mut IppiResizeSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        pSpec: *mut IppiResizeSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_8u_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        hint: IppHintAlgorithm,
        pSpec: *mut IppiResizeSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_8u_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        valueB: Ipp32f,
        valueC: Ipp32f,
        hint: IppHintAlgorithm,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_8u_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        numLobes: Ipp32u,
        hint: IppHintAlgorithm,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C4R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLinearInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingCubicInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLanczosInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpGetBufferSize_L(
        pSpec: *const IppiWarpSpec,
        dstRoiSize: IppiSizeL,
        pBufSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineBound_L(
        srcROI: IppiRectL,
        bound: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineQuad_L(
        srcROI: IppiRectL,
        quad: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineTransform_L(
        srcROI: IppiRectL,
        quad: *const [f64; 2usize],
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineSrcRoi_L(
        srcSize: IppiSizeL,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        srcRoi: *mut IppiRectL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetRotateShift_L(
        xCenter: f64,
        yCenter: f64,
        angle: f64,
        xShift: *mut f64,
        yShift: *mut f64,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetRotateTransform_L(
        angle: f64,
        xShift: f64,
        yShift: f64,
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineGetSize_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        interpolation: IppiInterpolationType,
        direction: IppiWarpDirection,
        borderType: IppiBorderType,
        flags: ::std::os::raw::c_int,
        pSpecSize: *mut IppSizeL,
        pInitBufSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearestInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        flags: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinearInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        flags: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubicInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        numChannels: ::std::os::raw::c_int,
        valueB: Ipp64f,
        valueC: Ipp64f,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        flags: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C4R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C4R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C4R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderGetSize_L(
        kernelVolume: IpprVolumeL,
        dstRoiVolume: IpprVolumeL,
        dataType: IppDataType,
        kernelType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut IppSizeL,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_16s_L(
        pKernel: *const Ipp16s,
        kernelVolume: IpprVolumeL,
        divisor: ::std::os::raw::c_int,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_32f_L(
        pKernel: *const Ipp32f,
        kernelVolume: IpprVolumeL,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_64f_L(
        pKernel: *const Ipp64f,
        kernelVolume: IpprVolumeL,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_8u_C1V_L(
        pSrc: *const Ipp8u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_16s_C1V_L(
        pSrc: *const Ipp16s,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_16u_C1V_L(
        pSrc: *const Ipp16u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_32f_C1V_L(
        pSrc: *const Ipp32f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_64f_C1V_L(
        pSrc: *const Ipp64f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp64f,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_8u_C1V_L(
        pSrc: *const Ipp8u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp8u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_16u_C1V_L(
        pSrc: *const Ipp16u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp16u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_16s_C1V_L(
        pSrc: *const Ipp16s,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp16s,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_32f_C1V_L(
        pSrc: *const Ipp32f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp32f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_64f_C1V_L(
        pSrc: *const Ipp64f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp64f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_8u_C1V_L(
        pSrc: *const Ipp8u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp8u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_16u_C1V_L(
        pSrc: *const Ipp16u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp16u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_16s_C1V_L(
        pSrc: *const Ipp16s,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp16s,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_32f_C1V_L(
        pSrc: *const Ipp32f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp32f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_64f_C1V_L(
        pSrc: *const Ipp64f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp64f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralGetBufferSize_L(
        filter: IppiFilterBilateralType,
        dstRoiSize: IppiSizeL,
        kernelWidthHeight: IppSizeL,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        distMethodType: IppiDistanceMethodType,
        pSpecSize: *mut IppSizeL,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralInit_L(
        filter: IppiFilterBilateralType,
        dstRoiSize: IppiSizeL,
        kernelWidthHeight: IppSizeL,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        distMethod: IppiDistanceMethodType,
        valSquareSigma: Ipp64f,
        posSquareSigma: Ipp64f,
        pSpec: *mut IppiFilterBilateralSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_P3R_L(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_P3R_L(
        pSrc: *mut *const Ipp32f,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp32f,
        dstStep: *mut IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_P3R_L(
        pSrc: *mut *const Ipp64f,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp64f,
        dstStep: *mut IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetLibVersion() -> *const IppLibraryVersion;
}
extern "C" {
    pub fn ippiMalloc_8u_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiFree(ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn ippiAdd_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C1IRSfs(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C3IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_AC4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C1IRSfs(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C3IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_AC4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C1IRSfs(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C3IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_AC4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C1IRSfs(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C3IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_AC4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C1IRSfs(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C3IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_AC4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C1IRSfs(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C3IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_AC4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C1IRSfs(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C3IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_AC4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C1IRSfs(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C3IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_AC4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C1IRSfs(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C3IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_AC4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C1IR(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C3IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_AC4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C1IR(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C3IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_AC4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C1IR(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C3IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_AC4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        val: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        val: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C1IR(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C3IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C4IR(
        val: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_AC4IR(
        val: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C1IRSfs(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C3IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C4IRSfs(
        val: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_AC4IRSfs(
        val: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C1IRSfs(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C3IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C4IRSfs(
        val: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_AC4IRSfs(
        val: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C1IRSfs(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C3IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C4IRSfs(
        val: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_AC4IRSfs(
        val: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C1IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C3IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_AC4IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C4IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C1IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C3IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_AC4IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C4IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C1IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C3IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_AC4IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C4IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_C1IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_C3IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_AC4IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_C1IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_C3IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_AC4IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_C1IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_C3IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_AC4IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16s_C1IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16s_C3IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScalFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScalFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_8u_C1IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_8u_C3IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16u_C1IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScalFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16u_C3IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScalFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16s_C1IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16s_C3IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16u_C1IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16u_C3IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_8u_C1IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_8u_C3IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C1IR(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C3IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_AC4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C1IR(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C3IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_AC4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_8u64f_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16u64f_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16s64f_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32u64f_C1R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32s64f_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32f64f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_8u64f_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16u64f_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16s64f_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32u64f_C3R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32s64f_C3R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32f64f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_8u64f_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16u64f_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16s64f_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32u64f_C4R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32s64f_C4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32f64f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_8u64f_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16u64f_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16s64f_AC4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32u64f_AC4R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32s64f_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32f64f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProdCol_32f_L2(
        ppSrcRow: *const *const Ipp32f,
        pTaps: *const Ipp32f,
        tapsLen: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        width: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProdCol_64f_L2(
        ppSrcRow: *const *const Ipp64f,
        pTaps: *const Ipp64f,
        tapsLen: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        width: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPackToCplxExtend_32f32fc_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCplxExtendToPack_32fc32f_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCplxExtendToPack_32fc32f_C3R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhasePack_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhasePack_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhasePackGetBufferSize_32f(
        numChannels: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitudePack_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitudePack_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitudePackGetBufferSize_32f(
        numChannels: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitude_32fc32f_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitude_32fc32f_C3R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhase_32fc32f_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhase_32fc32f_C3R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_8u_AP4R(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_16u_AP4R(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_8u_AP4IR(
        pSrcDst: *const *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_16u_AP4IR(
        pSrcDst: *const *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_AC4IR(
        alpha: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_AC4IR(
        alpha: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_AP4R(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_AP4R(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_AP4IR(
        alpha: Ipp8u,
        pSrcDst: *const *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_AP4IR(
        alpha: Ipp16u,
        pSrcDst: *const *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C4IR(
        alpha: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C4IR(
        alpha: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C3IR(
        alpha: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C3IR(
        alpha: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C1IR(
        alpha: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C1IR(
        alpha: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16s_AC4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32s_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32u_AC4R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AP4R(
        pSrc1: *const *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AP4R(
        pSrc1: *const *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AC1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AC1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16s_AC1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32s_AC1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32u_AC1R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32f_AC1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_AP4R(
        pSrc1: *const *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_AP4R(
        pSrc1: *const *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16s,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32s_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp32s,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32u_C1R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp32u,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp32u,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp32f,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16s_AC4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32u_AC4IR(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AP4IR(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *const *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AP4IR(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *const *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_AP4IR(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *const *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_AP4IR(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *const *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16s_C1IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16s,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32s_C1IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp32s,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32u_C1IR(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp32u,
        pSrcDst: *mut Ipp32u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp32u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp32f,
        roiSize: IppiSize,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInit_C_32fc(
        orderX: ::std::os::raw::c_int,
        orderY: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm,
        pFFTSpec: *mut IppiFFTSpec_C_32fc,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInit_R_32f(
        orderX: ::std::os::raw::c_int,
        orderY: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm,
        pFFTSpec: *mut IppiFFTSpec_R_32f,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTGetSize_C_32fc(
        orderX: ::std::os::raw::c_int,
        orderY: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTGetSize_R_32f(
        orderX: ::std::os::raw::c_int,
        orderY: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_CToC_32fc_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_CToC_32fc_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_CToC_32fc_C1IR(
        pSrcDst: *mut Ipp32fc,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_CToC_32fc_C1IR(
        pSrcDst: *mut Ipp32fc,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInit_C_32fc(
        roiSize: IppiSize,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm,
        pDFTSpec: *mut IppiDFTSpec_C_32fc,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInit_R_32f(
        roiSize: IppiSize,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm,
        pDFTSpec: *mut IppiDFTSpec_R_32f,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTGetSize_C_32fc(
        roiSize: IppiSize,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTGetSize_R_32f(
        roiSize: IppiSize,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_CToC_32fc_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_CToC_32fc_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_CToC_32fc_C1IR(
        pSrcDst: *mut Ipp32fc,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_CToC_32fc_C1IR(
        pSrcDst: *mut Ipp32fc,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwdInit_32f(
        pDCTSpec: *mut IppiDCTFwdSpec_32f,
        roiSize: IppiSize,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInvInit_32f(
        pDCTSpec: *mut IppiDCTInvSpec_32f,
        roiSize: IppiSize,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwdGetSize_32f(
        roiSize: IppiSize,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInvGetSize_32f(
        roiSize: IppiSize,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwd_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwd_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwd_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwd_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInv_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInv_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInv_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInv_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_16s_C1R(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_2x2_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_4x4_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_2x2_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_4x4_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8To2x2Inv_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8To4x4Inv_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8To2x2Inv_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8To4x4Inv_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_A10_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_A10_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_16s8u_C1R(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8FwdLS_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        addVal: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8InvLSClip_16s8u_C1R(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        addVal: Ipp16s,
        clipDown: Ipp8u,
        clipUp: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_32f_C1(pSrc: *const Ipp32f, pDst: *mut Ipp32f) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_32f_C1(pSrc: *const Ipp32f, pDst: *mut Ipp32f) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_32f_C1I(pSrcDst: *mut Ipp32f) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_32f_C1I(pSrcDst: *mut Ipp32f) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwdGetSize_32f(
        numChannels: ::std::os::raw::c_int,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwdInit_32f_C1R(
        pSpec: *mut IppiWTFwdSpec_32f_C1R,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwdInit_32f_C3R(
        pSpec: *mut IppiWTFwdSpec_32f_C3R,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwd_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pApproxDst: *mut Ipp32f,
        approxStep: ::std::os::raw::c_int,
        pDetailXDst: *mut Ipp32f,
        detailXStep: ::std::os::raw::c_int,
        pDetailYDst: *mut Ipp32f,
        detailYStep: ::std::os::raw::c_int,
        pDetailXYDst: *mut Ipp32f,
        detailXYStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWTFwdSpec_32f_C1R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwd_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pApproxDst: *mut Ipp32f,
        approxStep: ::std::os::raw::c_int,
        pDetailXDst: *mut Ipp32f,
        detailXStep: ::std::os::raw::c_int,
        pDetailYDst: *mut Ipp32f,
        detailYStep: ::std::os::raw::c_int,
        pDetailXYDst: *mut Ipp32f,
        detailXYStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWTFwdSpec_32f_C3R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInvGetSize_32f(
        numChannels: ::std::os::raw::c_int,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInvInit_32f_C1R(
        pSpec: *mut IppiWTInvSpec_32f_C1R,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInvInit_32f_C3R(
        pSpec: *mut IppiWTInvSpec_32f_C3R,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInv_32f_C1R(
        pApproxSrc: *const Ipp32f,
        approxStep: ::std::os::raw::c_int,
        pDetailXSrc: *const Ipp32f,
        detailXStep: ::std::os::raw::c_int,
        pDetailYSrc: *const Ipp32f,
        detailYStep: ::std::os::raw::c_int,
        pDetailXYSrc: *const Ipp32f,
        detailXYStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pSpec: *const IppiWTInvSpec_32f_C1R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInv_32f_C3R(
        pApproxSrc: *const Ipp32f,
        approxStep: ::std::os::raw::c_int,
        pDetailXSrc: *const Ipp32f,
        detailXStep: ::std::os::raw::c_int,
        pDetailYSrc: *const Ipp32f,
        detailYStep: ::std::os::raw::c_int,
        pDetailXYSrc: *const Ipp32f,
        detailXYStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pSpec: *const IppiWTInvSpec_32f_C3R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDecimateFilterRow_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        fraction: IppiFraction,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDecimateFilterColumn_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        fraction: IppiFraction,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C1IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C3IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_AC4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_8u_C1R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_8u_C3R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_8u_C4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_8u_AC4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16u_C1R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16u_C3R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16u_C4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16u_AC4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16s_C1R(
        pSrc: *const Ipp16s,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16s_C3R(
        pSrc: *const Ipp16s,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16s_C4R(
        pSrc: *const Ipp16s,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16s_AC4R(
        pSrc: *const Ipp16s,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_32f_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_32f_C3R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_32f_C4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_32f_AC4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_64f_C1R(
        pSrc: *const Ipp64f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp64f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp64f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_64f_C3R(
        pSrc: *const Ipp64f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp64f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp64f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_64f_C4R(
        pSrc: *const Ipp64f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp64f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp64f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_64f_AC4R(
        pSrc: *const Ipp64f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp64f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp64f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSetMode(hint: IppHintAlgorithm, pSpec: *mut IppiResizeSpec) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeFilterGetSize_8u_C1R(
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        filter: IppiResizeFilterType,
        pSize: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeFilterInit_8u_C1R(
        pState: *mut IppiResizeFilterState,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        filter: IppiResizeFilterType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeFilter_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiResizeFilterState,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYCbCr422GetBufSize(
        srcROI: IppiRect,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYCbCr422_8u_C2R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineBound(
        srcROI: IppiRect,
        bound: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineQuad(
        srcROI: IppiRect,
        quad: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineTransform(
        srcROI: IppiRect,
        quad: *const [f64; 2usize],
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineSrcRoi(
        srcSize: IppiSize,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoi: *mut IppiRect,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetRotateShift(
        xCenter: f64,
        yCenter: f64,
        angle: f64,
        xShift: *mut f64,
        yShift: *mut f64,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetRotateTransform(
        angle: f64,
        xShift: f64,
        yShift: f64,
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPerspectiveBound(
        srcROI: IppiRect,
        bound: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPerspectiveQuad(
        srcROI: IppiRect,
        quad: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPerspectiveTransform(
        srcROI: IppiRect,
        quad: *const [f64; 2usize],
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetBilinearBound(
        srcROI: IppiRect,
        bound: *mut [f64; 2usize],
        coeffs: *const [f64; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetBilinearQuad(
        srcROI: IppiRect,
        quad: *mut [f64; 2usize],
        coeffs: *const [f64; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetBilinearTransform(
        srcROI: IppiRect,
        quad: *const [f64; 2usize],
        coeffs: *mut [f64; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearGetBufferSize(
        srcSize: IppiSize,
        srcROI: IppiRect,
        dstROI: IppiRect,
        direction: IppiWarpDirection,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_8u_C1R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_8u_C3R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_8u_C4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_32f_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_32f_C3R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_32f_C4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_16u_C1R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_16u_C3R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_16u_C4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_8u_C1R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_8u_C3R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_8u_C4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_32f_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_32f_C3R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_32f_C4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_16u_C1R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_16u_C3R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_16u_C4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuadGetBufferSize(
        srcSize: IppiSize,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_8u_C1R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_8u_C3R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_8u_C4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_32f_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_32f_C3R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_32f_C4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_16u_C1R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_16u_C3R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_16u_C4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpGetBufferSize(
        pSpec: *const IppiWarpSpec,
        dstRoiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpQuadGetSize(
        srcSize: IppiSize,
        srcQuad: *const [f64; 2usize],
        dstSize: IppiSize,
        dstQuad: *const [f64; 2usize],
        transform: IppiWarpTransformType,
        dataType: IppDataType,
        interpolation: IppiInterpolationType,
        borderType: IppiBorderType,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpQuadNearestInit(
        srcSize: IppiSize,
        srcQuad: *const [f64; 2usize],
        dstSize: IppiSize,
        dstQuad: *const [f64; 2usize],
        transform: IppiWarpTransformType,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpQuadLinearInit(
        srcSize: IppiSize,
        srcQuad: *const [f64; 2usize],
        dstSize: IppiSize,
        dstQuad: *const [f64; 2usize],
        transform: IppiWarpTransformType,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpQuadCubicInit(
        srcSize: IppiSize,
        srcQuad: *const [f64; 2usize],
        dstSize: IppiSize,
        dstQuad: *const [f64; 2usize],
        transform: IppiWarpTransformType,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        valueB: Ipp64f,
        valueC: Ipp64f,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineGetSize(
        srcSize: IppiSize,
        dstSize: IppiSize,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        interpolation: IppiInterpolationType,
        direction: IppiWarpDirection,
        borderType: IppiBorderType,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearestInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinearInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubicInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        numChannels: ::std::os::raw::c_int,
        valueB: Ipp64f,
        valueC: Ipp64f,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C4R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C4R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C4R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpGetRectInfinite() -> IppiRect;
}
extern "C" {
    pub fn ippiWarpPerspectiveGetSize(
        srcSize: IppiSize,
        srcRoi: IppiRect,
        dstSize: IppiSize,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        interpolation: IppiInterpolationType,
        direction: IppiWarpDirection,
        borderType: IppiBorderType,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearestInit(
        srcSize: IppiSize,
        srcRoi: IppiRect,
        dstSize: IppiSize,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinearInit(
        srcSize: IppiSize,
        srcRoi: IppiRect,
        dstSize: IppiSize,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubicInit(
        srcSize: IppiSize,
        srcRoi: IppiRect,
        dstSize: IppiSize,
        dataType: IppDataType,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection,
        numChannels: ::std::os::raw::c_int,
        valueB: Ipp64f,
        valueC: Ipp64f,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMomentGetStateSize_64f(
        hint: IppHintAlgorithm,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMomentInit_64f(
        pState: *mut IppiMomentState_64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetSpatialMoment_64f(
        pState: *const IppiMomentState_64f,
        mOrd: ::std::os::raw::c_int,
        nOrd: ::std::os::raw::c_int,
        nChannel: ::std::os::raw::c_int,
        roiOffset: IppiPoint,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetCentralMoment_64f(
        pState: *const IppiMomentState_64f,
        mOrd: ::std::os::raw::c_int,
        nOrd: ::std::os::raw::c_int,
        nChannel: ::std::os::raw::c_int,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetNormalizedSpatialMoment_64f(
        pState: *const IppiMomentState_64f,
        mOrd: ::std::os::raw::c_int,
        nOrd: ::std::os::raw::c_int,
        nChannel: ::std::os::raw::c_int,
        roiOffset: IppiPoint,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetNormalizedCentralMoment_64f(
        pState: *const IppiMomentState_64f,
        mOrd: ::std::os::raw::c_int,
        nOrd: ::std::os::raw::c_int,
        nChannel: ::std::os::raw::c_int,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetHuMoments_64f(
        pState: *const IppiMomentState_64f,
        nChannel: ::std::os::raw::c_int,
        pHm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSum: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_8u32f_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_8u32f_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_8u32f_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_16u32f_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_16u32f_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_16u32f_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndexGetBufferSize(
        srcType: IppDataType,
        ippChan: IppChannels,
        roiSize: IppiSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogramGetBufferSize(
        dataType: IppDataType,
        roiSize: IppiSize,
        nLevels: *const ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        uniform: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogramInit(
        dataType: IppDataType,
        pLevels: *mut *const Ipp32f,
        nLevels: *mut ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiHistogramSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogramUniformInit(
        dataType: IppDataType,
        lowerLevel: *mut Ipp32f,
        upperLevel: *mut Ipp32f,
        nLevels: *mut ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiHistogramSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogramGetLevels(
        pSpec: *const IppiHistogramSpec,
        pLevels: *mut *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_GetSize(
        interp: IppiInterpolationType,
        dataType: IppDataType,
        ippChan: IppChannels,
        roiSize: IppiSize,
        nLevels: *const ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_Init_8u(
        interp: IppiInterpolationType,
        ippChan: IppChannels,
        roiSize: IppiSize,
        pValues: *mut *const Ipp32s,
        pLevels: *mut *const Ipp32s,
        nLevels: *mut ::std::os::raw::c_int,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_Init_16u(
        interp: IppiInterpolationType,
        ippChan: IppChannels,
        roiSize: IppiSize,
        pValues: *mut *const Ipp32s,
        pLevels: *mut *const Ipp32s,
        nLevels: *mut ::std::os::raw::c_int,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_Init_16s(
        interp: IppiInterpolationType,
        ippChan: IppChannels,
        roiSize: IppiSize,
        pValues: *mut *const Ipp32s,
        pLevels: *mut *const Ipp32s,
        nLevels: *mut ::std::os::raw::c_int,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_Init_32f(
        interp: IppiInterpolationType,
        ippChan: IppChannels,
        roiSize: IppiSize,
        pValues: *mut *const Ipp32f,
        pLevels: *mut *const Ipp32f,
        nLevels: *mut ::std::os::raw::c_int,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u32u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp32u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u24u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u8u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u32u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp32u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u24u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp16u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp16u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp16u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp16u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: Ipp8u,
        upperBound: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: *mut Ipp8u,
        upperBound: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: *mut Ipp8u,
        upperBound: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: Ipp32f,
        upperBound: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: *mut Ipp32f,
        upperBound: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: *mut Ipp32f,
        upperBound: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianGetBufferSize_32f(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        nChannels: Ipp32u,
        bufferSize: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianGetBufferSize_64f(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        nChannels: Ipp32u,
        bufferSize: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedian_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedian_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedian_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianWeightedCenter3x3_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        weight: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorderGetBufferSize(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorderGetBufferSize(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorderGetBufferSize(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorderGetBufferSize(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBox_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowGetBufferSize(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_8u32s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_8u32s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_8u32s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16s32f_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16s32f_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16u32f_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16u32f_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_8u32f_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16u32f_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16s32f_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_8u32f_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16u32f_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16s32f_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrHorizMaskBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrVertMaskBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittHorizBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittVertBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsDownBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsUpBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizSecondBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertSecondBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelNegVertBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrVertMaskBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrHorizMaskBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittVertBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittHorizBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsDownBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsUpBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertSecondBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizSecondBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelNegVertBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrVertMaskBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrHorizMaskBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittVertBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittHorizBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsDownBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsUpBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertSecondBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizSecondBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelNegVertBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrVertMaskBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrHorizMaskBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittVertBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittHorizBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsDownBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsUpBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        normType: IppNormType,
        srcDataType: IppDataType,
        dstDataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobel_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobel_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobel_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobel_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWienerGetBufferSize(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        channels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvGetBufferSize(
        src1Size: IppiSize,
        src2Size: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        algType: IppEnum,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNormGetBufferSize(
        srcRoiSize: IppiSize,
        tplRoiSize: IppiSize,
        algType: IppEnum,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNorm_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp32f,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNorm_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp16u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNorm_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNorm_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNormGetBufferSize(
        srcRoiSize: IppiSize,
        tplRoiSize: IppiSize,
        algType: IppEnum,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNorm_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp32f,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNorm_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp16u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNorm_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNorm_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp8u,
        valueLT: Ipp8u,
        thresholdGT: Ipp8u,
        valueGT: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp16s,
        valueLT: Ipp16s,
        thresholdGT: Ipp16s,
        valueGT: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp32f,
        valueLT: Ipp32f,
        thresholdGT: Ipp32f,
        valueGT: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp8u,
        valueLT: *const Ipp8u,
        thresholdGT: *const Ipp8u,
        valueGT: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16s,
        valueLT: *const Ipp16s,
        thresholdGT: *const Ipp16s,
        valueGT: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp32f,
        valueLT: *const Ipp32f,
        thresholdGT: *const Ipp32f,
        valueGT: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp8u,
        valueLT: *const Ipp8u,
        thresholdGT: *const Ipp8u,
        valueGT: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16s,
        valueLT: *const Ipp16s,
        thresholdGT: *const Ipp16s,
        valueGT: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp32f,
        valueLT: *const Ipp32f,
        thresholdGT: *const Ipp32f,
        valueGT: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp8u,
        valueLT: Ipp8u,
        thresholdGT: Ipp8u,
        valueGT: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp16s,
        valueLT: Ipp16s,
        thresholdGT: Ipp16s,
        valueGT: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp32f,
        valueLT: Ipp32f,
        thresholdGT: Ipp32f,
        valueGT: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp8u,
        valueLT: *const Ipp8u,
        thresholdGT: *const Ipp8u,
        valueGT: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16s,
        valueLT: *const Ipp16s,
        thresholdGT: *const Ipp16s,
        valueGT: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp32f,
        valueLT: *const Ipp32f,
        thresholdGT: *const Ipp32f,
        valueGT: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp8u,
        valueLT: *const Ipp8u,
        thresholdGT: *const Ipp8u,
        valueGT: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16s,
        valueLT: *const Ipp16s,
        thresholdGT: *const Ipp16s,
        valueGT: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp32f,
        valueLT: *const Ipp32f,
        thresholdGT: *const Ipp32f,
        valueGT: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp16u,
        valueLT: Ipp16u,
        thresholdGT: Ipp16u,
        valueGT: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16u,
        valueLT: *const Ipp16u,
        thresholdGT: *const Ipp16u,
        valueGT: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16u,
        valueLT: *const Ipp16u,
        thresholdGT: *const Ipp16u,
        valueGT: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp16u,
        valueLT: Ipp16u,
        thresholdGT: Ipp16u,
        valueGT: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16u,
        valueLT: *const Ipp16u,
        thresholdGT: *const Ipp16u,
        valueGT: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16u,
        valueLT: *const Ipp16u,
        thresholdGT: *const Ipp16u,
        valueGT: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComputeThreshold_Otsu_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pThreshold: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveBoxGetBufferSize(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveGaussGetBufferSize(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveGaussInit(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        sigma: Ipp32f,
        pSpec: *mut IppiThresholdAdaptiveSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveBox_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        delta: Ipp32f,
        valGT: Ipp8u,
        valLE: Ipp8u,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveGauss_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        delta: Ipp32f,
        valGT: Ipp8u,
        valLE: Ipp8u,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *mut IppiThresholdAdaptiveSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveBox_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        delta: Ipp32f,
        valGT: Ipp8u,
        valLE: Ipp8u,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveGauss_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        delta: Ipp32f,
        valGT: Ipp8u,
        valLE: Ipp8u,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *mut IppiThresholdAdaptiveSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyManaged_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flags: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C1C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C1C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3CR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4CR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_AC4C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C1MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_AC4MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3CR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4CR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_AC4C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1MR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3MR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4MR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_AC4MR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3CR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4CR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_AC4C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_AC4MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_P3C3R(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4P4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_P4C4R(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3P3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_P3C3R(
        pSrc: *const *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4P4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_P4C4R(
        pSrc: *const *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3P3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_P3C3R(
        pSrc: *const *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4P4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_P4C4R(
        pSrc: *const *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3CR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4CR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_AC4C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1MR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3MR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4MR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_AC4MR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3P3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_P3C3R(
        pSrc: *const *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4P4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_P4C4R(
        pSrc: *const *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3CR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4CR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_AC4C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_AC4MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3P3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_P3C3R(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4P4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_P4C4R(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C1IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C3IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C4IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C1IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C3IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_AC4IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C4IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C1IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C3IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C4IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C1IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C3IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C4IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C1IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C3IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C4IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C1IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C3IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_AC4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C1IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C3IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C4IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C1IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C3IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C4IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C1IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C3IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C4IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C1IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C3IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C4IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C1IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C3IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C4IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32s_C1IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32f_C1IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_8u_C1V(
        pSrc: *const Ipp8u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp8u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_16u_C1V(
        pSrc: *const Ipp16u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp16u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_16s_C1V(
        pSrc: *const Ipp16s,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp16s,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_32f_C1V(
        pSrc: *const Ipp32f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp32f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_64f_C1V(
        pSrc: *const Ipp64f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp64f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_8u_C1V(
        pSrc: *const Ipp8u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp8u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_16u_C1V(
        pSrc: *const Ipp16u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp16u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_16s_C1V(
        pSrc: *const Ipp16s,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp16s,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_32f_C1V(
        pSrc: *const Ipp32f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp32f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_64f_C1V(
        pSrc: *const Ipp64f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp64f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDup_8u_C1C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDup_8u_C1C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C1R(
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C3CR(
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C4CR(
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C3R(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C4R(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_AC4R(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C1MR(
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C3MR(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C4MR(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_AC4MR(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C1R(
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C3CR(
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C4CR(
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C3R(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C4R(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_AC4R(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C1MR(
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C3MR(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C4MR(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_AC4MR(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C1R(
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C3CR(
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C4CR(
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C3R(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C4R(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_AC4R(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C1MR(
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C3MR(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C4MR(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_AC4MR(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C1R(
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C3CR(
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C4CR(
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C3R(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C4R(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_AC4R(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C1MR(
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C3MR(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C4MR(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_AC4MR(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C1R(
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C3CR(
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C4CR(
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C3R(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C4R(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_AC4R(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C1MR(
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C3MR(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C4MR(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_AC4MR(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp8u,
        high: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp8u,
        high: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp8u,
        high: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp8u,
        high: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16s,
        high: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16s,
        high: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16s,
        high: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16s,
        high: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp32f,
        high: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp32f,
        high: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp32f,
        high: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp32f,
        high: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16u,
        high: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16u,
        high: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16u,
        high: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16u,
        high: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp8u,
        stdev: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp8u,
        stdev: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp8u,
        stdev: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp8u,
        stdev: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16s,
        stdev: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16s,
        stdev: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16s,
        stdev: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16s,
        stdev: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp32f,
        stdev: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp32f,
        stdev: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp32f,
        stdev: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp32f,
        stdev: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16u,
        stdev: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16u,
        stdev: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16u,
        stdev: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16u,
        stdev: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_8u_C1R(
        pDst: *mut Ipp8u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_8u_C3R(
        pDst: *mut Ipp8u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_8u_C4R(
        pDst: *mut Ipp8u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_8u_AC4R(
        pDst: *mut Ipp8u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16u_C1R(
        pDst: *mut Ipp16u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16u_C3R(
        pDst: *mut Ipp16u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16u_C4R(
        pDst: *mut Ipp16u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16u_AC4R(
        pDst: *mut Ipp16u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16s_C1R(
        pDst: *mut Ipp16s,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16s_C3R(
        pDst: *mut Ipp16s,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16s_C4R(
        pDst: *mut Ipp16s,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16s_AC4R(
        pDst: *mut Ipp16s,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_32f_C1R(
        pDst: *mut Ipp32f,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_32f_C3R(
        pDst: *mut Ipp32f,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_32f_C4R(
        pDst: *mut Ipp32f,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_32f_AC4R(
        pDst: *mut Ipp32f,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_8u_C1R(
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_8u_C3R(
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_8u_C4R(
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_8u_AC4R(
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16u_C1R(
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16u_C3R(
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16u_C4R(
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16u_AC4R(
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16s_C1R(
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16s_C3R(
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16s_C4R(
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16s_AC4R(
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_32f_C1R(
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_32f_C3R(
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_32f_C4R(
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_32f_AC4R(
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u8s_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32f_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32f_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s8u_C1Rs(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s16s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s16u_C1Rs(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32u_C1Rs(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32s_C3R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32s_AC4R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32s_C4R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32f_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32f_C3R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32f_AC4R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32f_C4R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8s_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u16s_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32s_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32s_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32s_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32s_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32f_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32f_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8u_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8u_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8u_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s16u_C1Rs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32u_C1Rs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32f_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32f_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u8u_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u8s_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u16u_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u16s_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u32s_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u32f_C1R(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8u_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8u_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8u_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8u_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s16u_C1RSfs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s16s_C1RSfs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s32u_C1Rs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s32f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f32u_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f32u_C1IRSfs(
        pSrcDst: *mut Ipp32u,
        srcDstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f32s_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_64f8u_C1RSfs(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_64f8s_C1RSfs(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_64f16u_C1RSfs(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_64f16s_C1RSfs(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s64f_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u8s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u64f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s8u_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s16u_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s16s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s32s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s32f_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s64f_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u8u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u8s_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u16s_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u32s_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u64f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s8u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s8s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s16u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s32s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s64f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s8u_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s8s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s16u_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s16s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s32f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s64f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f8s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f16u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f16s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f32s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f64f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f8u_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f8s_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f16u_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f16s_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f32s_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f32f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u_C1IR(
        pSrcDst: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s_C1IR(
        pSrcDst: *const Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u_C1IR(
        pSrcDst: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s_C1IR(
        pSrcDst: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s_C1IR(
        pSrcDst: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f_C1IR(
        pSrcDst: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f_C1IR(
        pSrcDst: *const Ipp64f,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBinToGray_1u8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        loVal: Ipp8u,
        hiVal: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBinToGray_1u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        loVal: Ipp16u,
        hiVal: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBinToGray_1u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        loVal: Ipp16s,
        hiVal: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBinToGray_1u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        loVal: Ipp32f,
        hiVal: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToBin_8u1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToBin_16u1u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToBin_16s1u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToBin_32f1u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPolarToCart_32fc_C1R(
        pSrcMagn: *const Ipp32f,
        pSrcPhase: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPolarToCart_32fc_C3R(
        pSrcMagn: *const Ipp32f,
        pSrcPhase: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C3C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C4C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_C3C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_C4C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_C3C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_C4C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_C3C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_C4C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_C3C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_C4C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32f_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32f_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16u8u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16u8u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16u8u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16u8u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16s8u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16s8u_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16s8u_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16s8u_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32s8u_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32s8u_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32s8u_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32s8u_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32f8u_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32f8u_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32f8u_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp8u,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16s,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16u,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp32f,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp8u,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp16s,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp16u,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp32f,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp8u,
        pMax: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16s,
        pMax: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16u,
        pMax: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp32f,
        pMax: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBlockMinMax_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDstMin: *mut Ipp32f,
        dstMinStep: ::std::os::raw::c_int,
        pDstMax: *mut Ipp32f,
        dstMaxStep: ::std::os::raw::c_int,
        blockSize: IppiSize,
        pDstGlobalMin: *mut Ipp32f,
        pDstGlobalMax: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBlockMinMax_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDstMin: *mut Ipp16s,
        dstMinStep: ::std::os::raw::c_int,
        pDstMax: *mut Ipp16s,
        dstMaxStep: ::std::os::raw::c_int,
        blockSize: IppiSize,
        pDstGlobalMin: *mut Ipp16s,
        pDstGlobalMax: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBlockMinMax_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDstMin: *mut Ipp16u,
        dstMinStep: ::std::os::raw::c_int,
        pDstMax: *mut Ipp16u,
        dstMaxStep: ::std::os::raw::c_int,
        blockSize: IppiSize,
        pDstGlobalMin: *mut Ipp16u,
        pDstGlobalMax: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBlockMinMax_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDstMin: *mut Ipp8u,
        dstMinStep: ::std::os::raw::c_int,
        pDstMax: *mut Ipp8u,
        dstMaxStep: ::std::os::raw::c_int,
        blockSize: IppiSize,
        pDstGlobalMin: *mut Ipp8u,
        pDstGlobalMax: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16s_C1IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16s_C1IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16s_C3IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16s_C3IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16s_C4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16s_C4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16s_AC4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16s_AC4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C1IR(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C3IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_AC4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C1IR(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C3IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_AC4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C3R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C1IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C3IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C1IR(
        value: Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C3IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_AC4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C1IR(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C3IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_AC4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C1IR(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C3IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_AC4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C3R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C1IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C3IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C1IR(
        value: Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C3IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_AC4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C1IR(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C3IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_AC4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C1IR(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C3IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_AC4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C3R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C1IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C3IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C1IR(
        value: Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C3IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_AC4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16s_AC4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEps_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEps_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEps_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEps_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEpsC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEpsC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEpsC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEpsC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode3x3_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate3x3_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiZigzagInv8x8_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiZigzagFwd8x8_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettGetBufferSize(
        dataType: IppDataType,
        roiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSepGetBufferSize(
        dataType: IppDataType,
        roiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingGetBufferSize(
        dataType: IppDataType,
        roiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSepGetBufferSize(
        dataType: IppDataType,
        roiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C1IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C3IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFTGetSize_32f(
        nChannels: ::std::os::raw::c_int,
        kernelSize: ::std::os::raw::c_int,
        FFTorder: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFTInit_32f_C1R(
        pDeconvFFTState: *mut IppiDeconvFFTState_32f_C1R,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        FFTorder: ::std::os::raw::c_int,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFTInit_32f_C3R(
        pDeconvFFTState: *mut IppiDeconvFFTState_32f_C3R,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        FFTorder: ::std::os::raw::c_int,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFT_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        pDeconvFFTState: *mut IppiDeconvFFTState_32f_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFT_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        pDeconvFFTState: *mut IppiDeconvFFTState_32f_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLRGetSize_32f(
        numChannels: ::std::os::raw::c_int,
        kernelSize: ::std::os::raw::c_int,
        maxroi: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLRInit_32f_C1R(
        pDeconvLR: *mut IppiDeconvLR_32f_C1R,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        maxroi: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLRInit_32f_C3R(
        pDeconvLR: *mut IppiDeconvLR_32f_C3R,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        maxroi: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLR_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        numiter: ::std::os::raw::c_int,
        pDeconvLR: *mut IppiDeconvLR_32f_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLR_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        numiter: ::std::os::raw::c_int,
        pDeconvLR: *mut IppiDeconvLR_32f_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorkey: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompColorKey_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp8u,
        alphaType: IppiAlphaType,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMedian_8u_P3C1R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        size: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeinterlaceFilterCAVT_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        threshold: Ipp16u,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorderGetBufferSize(
        filter: IppiFilterBilateralType,
        dstRoiSize: IppiSize,
        radius: ::std::os::raw::c_int,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        distMethodType: IppiDistanceMethodType,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorderInit(
        filter: IppiFilterBilateralType,
        dstRoiSize: IppiSize,
        radius: ::std::os::raw::c_int,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        distMethod: IppiDistanceMethodType,
        valSquareSigma: Ipp32f,
        posSquareSigma: Ipp32f,
        pSpec: *mut IppiFilterBilateralSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp8u,
        pSpec: *mut IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp8u,
        pSpec: *mut IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp32f,
        pSpec: *mut IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp32f,
        pSpec: *mut IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGetBufSize_64f_C1R(
        kernelSize: IppiSize,
        roiWidth: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilter_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pKernel: *const Ipp64f,
        kernelSize: IppiSize,
        anchor: IppiPoint,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_64f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_8u(
        pSpec: *const IppiResizeSpec_32f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_16u(
        pSpec: *const IppiResizeSpec_32f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_16s(
        pSpec: *const IppiResizeSpec_32f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_32f(
        pSpec: *const IppiResizeSpec_32f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_64f(
        pSpec: *const IppiResizeSpec_64f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_8u(
        pSpec: *const IppiResizeSpec_32f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_16u(
        pSpec: *const IppiResizeSpec_32f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_16s(
        pSpec: *const IppiResizeSpec_32f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_32f(
        pSpec: *const IppiResizeSpec_32f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_64f(
        pSpec: *const IppiResizeSpec_64f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_8u(
        pSpec: *const IppiResizeSpec_32f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_16u(
        pSpec: *const IppiResizeSpec_32f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_16s(
        pSpec: *const IppiResizeSpec_32f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_32f(
        pSpec: *const IppiResizeSpec_32f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_64f(
        pSpec: *const IppiResizeSpec_64f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_8u(
        pSpec: *const IppiResizeSpec_32f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_16u(
        pSpec: *const IppiResizeSpec_32f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_16s(
        pSpec: *const IppiResizeSpec_32f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_32f(
        pSpec: *const IppiResizeSpec_32f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_64f(
        pSpec: *const IppiResizeSpec_64f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_64f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: Ipp32s,
        pDst: *mut Ipp64f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: Ipp32s,
        pDst: *mut Ipp64f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C4R(
        pSrc: *const Ipp64f,
        srcStep: Ipp32s,
        pDst: *mut Ipp64f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLinearInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingCubicInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLanczosInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetSize(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType,
        antialiasing: Ipp32u,
        pSpecSize: *mut Ipp32s,
        pInitBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetBufSize(
        pSpec: *const IppiResizeYUV422Spec,
        dstSize: IppiSize,
        pBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetBorderSize(
        pSpec: *const IppiResizeYUV422Spec,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetSrcOffset(
        pSpec: *const IppiResizeYUV422Spec,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetSrcRoi(
        pSpec: *const IppiResizeYUV422Spec,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422NearestInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeYUV422Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422LinearInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeYUV422Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422Nearest_8u_C2R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeYUV422Spec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422Linear_8u_C2R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeYUV422Spec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetSize(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType,
        antialiasing: Ipp32u,
        pSpecSize: *mut Ipp32s,
        pInitBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetBufferSize(
        pSpec: *const IppiResizeYUV420Spec,
        dstSize: IppiSize,
        pBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetBorderSize(
        pSpec: *const IppiResizeYUV420Spec,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetSrcOffset(
        pSpec: *const IppiResizeYUV420Spec,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetSrcRoi(
        pSpec: *const IppiResizeYUV420Spec,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420LanczosInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeYUV420Spec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420SuperInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeYUV420Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420Lanczos_8u_P2R(
        pSrcY: *const Ipp8u,
        srcYStep: Ipp32s,
        pSrcUV: *const Ipp8u,
        srcUVStep: Ipp32s,
        pDstY: *mut Ipp8u,
        dstYStep: Ipp32s,
        pDstUV: *mut Ipp8u,
        dstUVStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiResizeYUV420Spec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420Super_8u_P2R(
        pSrcY: *const Ipp8u,
        srcYStep: Ipp32s,
        pSrcUV: *const Ipp8u,
        srcUVStep: Ipp32s,
        pDstY: *mut Ipp8u,
        dstYStep: Ipp32s,
        pDstUV: *mut Ipp8u,
        dstUVStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeYUV420Spec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderGetSize(
        kernelSize: IppiSize,
        dstRoiSize: IppiSize,
        dataType: IppDataType,
        kernelType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderInit_16s(
        pKernel: *const Ipp16s,
        kernelSize: IppiSize,
        divisor: ::std::os::raw::c_int,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        roundMode: IppRoundMode,
        pSpec: *mut IppiFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderInit_32f(
        pKernel: *const Ipp32f,
        kernelSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        roundMode: IppRoundMode,
        pSpec: *mut IppiFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderInit_64f(
        pKernel: *const Ipp64f,
        kernelSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        roundMode: IppRoundMode,
        pSpec: *mut IppiFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp64f,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderSetMode(
        hint: IppHintAlgorithm,
        offset: ::std::os::raw::c_int,
        pSpec: *mut IppiFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode3x3_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode5x5_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode5x5_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode3x3_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode5x5_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode5x5_32f16u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageHorizCorr_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        horShift: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageHorizCorr_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        horShift: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSADGetBufferSize(
        srcRoiSize: IppiSize,
        tplRoiSize: IppiSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        shape: IppiROIShape,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSAD_8u32s_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        shape: IppiROIShape,
        scaleFactor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSAD_16u32s_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp16u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        shape: IppiROIShape,
        scaleFactor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSAD_16s32s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp16s,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        shape: IppiROIShape,
        scaleFactor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSAD_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp32f,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        shape: IppiROIShape,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorGetBufferSize(
        roiSize: IppiSize,
        mask: IppiMaskSize,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_8u16s_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_16u32f_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_16s32f_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_8u16s_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_16u32f_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_16s32f_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_8u16s_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_16u32f_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_16s32f_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOGGetSize(
        pConfig: *const IppiHOGConfig,
        pHOGSpecSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOGInit(pConfig: *const IppiHOGConfig, pHOGSpec: *mut IppiHOGSpec) -> IppStatus;
}
extern "C" {
    pub fn ippiHOGGetBufferSize(
        pHOGSpec: *const IppiHOGSpec,
        roiSize: IppiSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOGGetDescriptorSize(
        pHOGSpec: *const IppiHOGSpec,
        pWinDescriptorSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGSpec: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGSpec: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGSpec: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGSpec: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGCtx: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: *mut Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGCtx: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: *mut Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGCtx: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: *mut Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGCtx: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResizeGetBufSize(
        srcVOI: IpprCuboid,
        dstVOI: IpprCuboid,
        nChannel: ::std::os::raw::c_int,
        interpolation: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprGetResizeCuboid(
        srcVOI: IpprCuboid,
        pDstCuboid: *mut IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_8u_C1V(
        pSrc: *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_16u_C1V(
        pSrc: *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_32f_C1V(
        pSrc: *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_8u_C1PV(
        pSrc: *const *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_16u_C1PV(
        pSrc: *const *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_32f_C1PV(
        pSrc: *const *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffineGetBufSize(
        srcVolume: IpprVolume,
        srcVOI: IpprCuboid,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        nChannel: ::std::os::raw::c_int,
        interpolation: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_8u_C1PV(
        pSrc: *const *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_16u_C1PV(
        pSrc: *const *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_32f_C1PV(
        pSrc: *const *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_8u_C1V(
        pSrc: *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_16u_C1V(
        pSrc: *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_32f_C1V(
        pSrc: *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_8u_C1PV(
        pSrc: *const *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const *const Ipp32f,
        pyMap: *const *const Ipp32f,
        pzMap: *const *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_16u_C1PV(
        pSrc: *const *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const *const Ipp32f,
        pyMap: *const *const Ipp32f,
        pzMap: *const *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_32f_C1PV(
        pSrc: *const *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const *const Ipp32f,
        pyMap: *const *const Ipp32f,
        pzMap: *const *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_8u_C1V(
        pSrc: *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const Ipp32f,
        pyMap: *const Ipp32f,
        pzMap: *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        mapPlaneStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_16u_C1V(
        pSrc: *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const Ipp32f,
        pyMap: *const Ipp32f,
        pzMap: *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        mapPlaneStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_32f_C1V(
        pSrc: *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const Ipp32f,
        pyMap: *const Ipp32f,
        pzMap: *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        mapPlaneStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterGetBufSize(
        dstVolume: IpprVolume,
        kernelVolume: IpprVolume,
        nChannel: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilter_16s_C1PV(
        pSrc: *const *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *const Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        pKernel: *const Ipp32s,
        kernelVolume: IpprVolume,
        anchor: IpprPoint,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilter_16s_C1V(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        pKernel: *const Ipp32s,
        kernelVolume: IpprVolume,
        anchor: IpprPoint,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm,
        rndMode: IppRoundMode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderGetSize(
        kernelVolume: IpprVolume,
        dstRoiVolume: IpprVolume,
        dataType: IppDataType,
        kernelType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_16s(
        pKernel: *const Ipp16s,
        kernelVolume: IpprVolume,
        divisor: ::std::os::raw::c_int,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_32f(
        pKernel: *const Ipp32f,
        kernelVolume: IpprVolume,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_64f(
        pKernel: *const Ipp64f,
        kernelVolume: IpprVolume,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_8u_C1V(
        pSrc: *const Ipp8u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_16s_C1V(
        pSrc: *const Ipp16s,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_16u_C1V(
        pSrc: *const Ipp16u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_32f_C1V(
        pSrc: *const Ipp32f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_64f_C1V(
        pSrc: *const Ipp64f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp64f,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedianGetSize(
        maskVolume: IpprVolume,
        dstRoiVolume: IpprVolume,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedianInit(
        maskVolume: IpprVolume,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterMedianSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_8u_C1V(
        pSrc: *const Ipp8u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_16u_C1V(
        pSrc: *const Ipp16u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_16s_C1V(
        pSrc: *const Ipp16s,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_32f_C1V(
        pSrc: *const Ipp32f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_64f_C1V(
        pSrc: *const Ipp64f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralGetBufferSize(
        filter: IppiFilterBilateralType,
        dstRoiSize: IppiSize,
        kernelWidthHeight: ::std::os::raw::c_int,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        distMethodType: IppiDistanceMethodType,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralInit(
        filter: IppiFilterBilateralType,
        dstRoiSize: IppiSize,
        kernelWidthHeight: ::std::os::raw::c_int,
        dataType: IppDataType,
        numChannels: ::std::os::raw::c_int,
        distMethod: IppiDistanceMethodType,
        valSquareSigma: Ipp64f,
        posSquareSigma: Ipp64f,
        pSpec: *mut IppiFilterBilateralSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_P3R(
        pSrc: *mut *const Ipp32f,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp32f,
        dstStep: *mut ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_P3R(
        pSrc: *mut *const Ipp64f,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp64f,
        dstStep: *mut ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C1R(
        pSrc: *mut Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C3R(
        pSrc: *mut Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C4R(
        pSrc: *mut Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_AC4R(
        pSrc: *mut Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C1IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C3IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_AC4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C1R(
        pSrc: *mut Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C3R(
        pSrc: *mut Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C4R(
        pSrc: *mut Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_AC4R(
        pSrc: *mut Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C1R(
        pSrc: *mut Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C3R(
        pSrc: *mut Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C4R(
        pSrc: *mut Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_AC4R(
        pSrc: *mut Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C1IR(
        pSrcDst: *mut Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C3IR(
        pSrcDst: *mut Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C4IR(
        pSrcDst: *mut Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_AC4IR(
        pSrcDst: *mut Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
